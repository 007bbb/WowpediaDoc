descriptions = {
	"AbandonSkill": "The player abandons a skill.",
	"AcceptAreaSpiritHeal": "Signs up for the Spirit Healer's resurrection timer in battlegrounds when in range.",
	"AcceptBattlefieldPort": "Enters the Battleground if the queue is ready.",
	"AcceptDuel": "Accepts a duel challenge.",
	"AcceptGroup": "Accepts the invitation from a group.",
	"AcceptGuild": "Accepts a guild invite.",
	"AcceptProposal": "Enters the Dungeon if the LFG queue is ready.",
	"AcceptQuest": "Accepts the currently offered quest.",
	"AcceptResurrect": "Accepts a resurrection offer.",
	"AcceptSockets": "Confirms pending gems for socketing.",
	"AcceptTrade": "Accepts the current trade offer.",
	"ActionHasRange": "Returns true if the action has has a range requirement.",
	"AddAutoQuestPopUp": "Adds a notification to the ObjectiveTrackerFrame that a quest is available or completed.",
	"AddChatWindowChannel": "Enables messages from a chat channel index for a chat window.",
	"AddChatWindowMessages": "Enables messages from the chat message type (e.g. \"SAY\") for a chat window.",
	"AddTradeMoney": "Adds money currently held by the cursor to the trade offer.",
	"Ambiguate": "Returns a version of a character-realm string suitable for use in a given context.",
	"ArchaeologyMapUpdateAll": "Updates and returns the amount of [[digsite]]s in a zone.",
	"AscendStop": "Called when the player releases the jump key.",
	"AssistUnit": "Assists the unit by targeting the same target.",
	"AttackTarget": "Toggles auto-attacking of the current target.",
	"AutoEquipCursorItem": "Equips the item currently held by the cursor.",
	"AutoStoreGuildBankItem": "Withdraws an item from the Guild Bank to the character's inventory.",
	"BNConnected": "Returns true if the WoW Client is connected to Battle.net.",
	"BNGetFOFInfo": "Returns info for the specified friend of a Battle.net friend.",
	"BNGetFriendInviteInfo": "Returns info for a Battle.net friend invite.",
	"BNGetInfo": "Returns the player's own Battle.net info.",
	"BNGetNumFriends": "Returns the amount of (online) Battle.net friends.",
	"BNSendGameData": "Sends an addon comm message to a Battle.net friend.",
	"BNSetAFK": "Sets the player's online AFK status.",
	"BNSetDND": "Sets the player's online DND status.",
	"BNSetFriendFavoriteFlag": "Favorites a Battle.net friend.",
	"BankButtonIDToInvSlotID": "Maps a BankButtonID to InventorySlotID.",
	"BindEnchant": "Confirms that enchanting an item will make it soulbound.",
	"BreakUpLargeNumbers": "Divides digits into groups using a localized delimiter character.",
	"BuyGuildCharter": "Purchases a [[Guild Charter]].",
	"BuyMerchantItem": "Buys an item from a merchant.",
	"BuyTrainerService": "Buys a trainer service (e.g. class skills and profession recipes).",
	"BuybackItem": "Buys back an item from the merchant.",
	"C_AchievementInfo.GetSupercedingAchievements": "Returns the next achievement in a series.",
	"C_AchievementInfo.SetPortraitTexture": "Sets a portrait texture for the unit being achievement compared.",
	"C_AddOns.GetAddOnMetadata": "Returns the TOC metadata of an addon.",
	"C_AlliedRaces.GetAllRacialAbilitiesFromID": "Returns the racial spells from an allied race.",
	"C_AlliedRaces.GetRaceInfoByID": "Returns allied race info.",
	"C_AreaPoiInfo.GetAreaPOIForMap": "Returns area points of interest for a map.",
	"C_AreaPoiInfo.GetAreaPOIInfo": "Returns info for an area point of interest (e.g. World PvP objectives).",
	"C_AreaPoiInfo.GetAreaPOISecondsLeft": "Returns the time left in seconds for an area point of interest.",
	"C_AreaPoiInfo.IsAreaPOITimed": "Returns whether an area poi is timed.",
	"C_ArtifactUI.Clear": "Clears data of the last opened artifact weapon.",
	"C_ArtifactUI.GetAppearanceInfo": "Returns information about a selected artifact appearance.",
	"C_ArtifactUI.GetAppearanceInfoByID": "Returns information about a selected artifact appearance.",
	"C_AuctionHouse.CalculateCommodityDeposit": "Returns required deposit for posting a commodity and quantity.",
	"C_AuctionHouse.CalculateItemDeposit": "Returns required deposit for posting a specific item and quantity.",
	"C_AuctionHouse.CanCancelAuction": "Returns if the auction can be cancelled. If it can't, load it with [[API C_AuctionHouse.QueryOwnedAuctions|QueryOwnedAuctions]].",
	"C_AuctionHouse.CancelAuction": "Cancels an auction.",
	"C_AuctionHouse.CancelCommoditiesPurchase": "Abort an incomplete commodity purchase to avoid it conflicting with another purchase.",
	"C_AuctionHouse.CancelSell": "Stop posting auctions for an non-commodity item.",
	"C_AuctionHouse.CloseAuctionHouse": "Close the auction house window.",
	"C_AuctionHouse.ConfirmCommoditiesPurchase": "Completes a commodity item purchase.",
	"C_AuctionHouse.GetAvailablePostCount": "Returns the available quantity of an item for posting.",
	"C_AuctionHouse.GetBrowseResults": "Returns the currently loaded summary results resulting from [[API C_AuctionHouse.SendBrowseQuery|SendBrowseQuery]].",
	"C_AuctionHouse.GetCancelCost": "Returns the cost for cancelling a specific owned auction. This is non-zero if it has a bid.",
	"C_AuctionHouse.GetCommoditySearchResultInfo": "Returns search results for a commodity item.",
	"C_AuctionHouse.GetCommoditySearchResultsQuantity": "Returns how many of the commodity is on sale.",
	"C_AuctionHouse.GetExtraBrowseInfo": "Returns the level (from 1-120, BfA levels) that some items would be crafted at.",
	"C_AuctionHouse.GetFilterGroups": "Returns groups of filters for use in the Filter dropdown in the Buy tab.",
	"C_AuctionHouse.GetItemCommodityStatus": "Returns if the item is a commodity, item or neither.",
	"C_AuctionHouse.GetItemKeyFromItem": "Returns an auction house item key from an item location.",
	"C_AuctionHouse.GetItemKeyInfo": "Returns more details about an item from its item key, including its name.",
	"C_AuctionHouse.GetItemKeyRequiredLevel": "Returns the required level to use an item found on the auction house.",
	"C_AuctionHouse.GetItemSearchResultInfo": "Returns search results for an item.",
	"C_AuctionHouse.GetItemSearchResultsQuantity": "Returns how many of the item is available on the auction house.",
	"C_AuctionHouse.GetNumCommoditySearchResults": "Returns the number of commodity results, the different prices.",
	"C_AuctionHouse.GetNumItemSearchResults": "Returns the number of item results, the different auctions.",
	"C_AuctionHouse.GetNumOwnedAuctions": "Returns the number of auctions the player has active on the auction house.",
	"C_AuctionHouse.GetNumReplicateItems": "Returns the amount of auctions.",
	"C_AuctionHouse.GetOwnedAuctionInfo": "Returns information for one of the player's active auctions.",
	"C_AuctionHouse.GetReplicateItemBattlePetInfo": "Returns display info for a battle pet from a [[API C_AuctionHouse.ReplicateItems|ReplicateItems]] result.",
	"C_AuctionHouse.GetReplicateItemInfo": "Returns information about the specified auction.",
	"C_AuctionHouse.GetReplicateItemLink": "Returns the item link (if loaded) for an item from a [[API C_AuctionHouse.ReplicateItems|ReplicateItems]] result.",
	"C_AuctionHouse.GetReplicateItemTimeLeft": "Returns the time left for an auction.",
	"C_AuctionHouse.HasFullBrowseResults": "Returns if the last group of summary results (groups of 500) is available.",
	"C_AuctionHouse.IsSellItemValid": "Returns if an item from your bag can be posted on the auction house.",
	"C_AuctionHouse.IsThrottledMessageSystemReady": "Returns if the next query will be throttled, either delayed or cancelled.",
	"C_AuctionHouse.MakeItemKey": "Returns an auction house item key.",
	"C_AuctionHouse.PlaceBid": "Places a bid on a non-commodity item.",
	"C_AuctionHouse.PostCommodity": "Posts a commodity item on the auction house.",
	"C_AuctionHouse.PostItem": "Posts an item on the auction house.",
	"C_AuctionHouse.QueryOwnedAuctions": "Queries the auction house for the player's active auctions.",
	"C_AuctionHouse.ReplicateItems": "Queries all auctions listed on the Auction House.",
	"C_AuctionHouse.SearchForFavorites": "Searches for favorited items.",
	"C_AuctionHouse.SearchForItemKeys": "Queries the auction house for summary results of up to 100 specific items.",
	"C_AuctionHouse.SendSearchQuery": "Queries an item in the auction house.",
	"C_AuctionHouse.SendSellSearchQuery": "Search for all auctions that are variants of a piece of gear, determined a specific item ID.",
	"C_AuctionHouse.StartCommoditiesPurchase": "Starts a commodity item purchase.",
	"C_BattleNet.GetFriendAccountInfo": "Returns information about a Battle.net friend account.",
	"C_BattleNet.GetFriendGameAccountInfo": "Returns information on the game the Battle.net friend is playing.",
	"C_BattleNet.GetFriendNumGameAccounts": "Returns the number of game accounts for the Battle.net friend.",
	"C_BlackMarket.Close": "Closes the [[Black Market]] window.",
	"C_BlackMarket.GetItemInfoByID": "Returns info for a [[Black Market]] auction.",
	"C_BlackMarket.GetNumItems": "Returns the number of auctions on the [[Black Market Auction House]].",
	"C_BlackMarket.ItemPlaceBid": "Places a bid on a black market auction.",
	"C_BlackMarket.RequestItems": "Requests updated black market auction information from the server.",
	"C_CVar.GetCVar": "Returns the current value of a console variable.",
	"C_CVar.GetCVarBitfield": "Returns the bitfield of a console variable.",
	"C_CVar.GetCVarBool": "Returns the boolean value of a console variable.",
	"C_CVar.GetCVarDefault": "Returns the default value of a console variable.",
	"C_CVar.RegisterCVar": "Temporarily registers a custom console variable.",
	"C_CVar.ResetTestCVars": "Resets the {{api|t=c|ActionCam}} cvars.",
	"C_CVar.SetCVar": "Sets a console variable.",
	"C_CVar.SetCVarBitfield": "Sets the bitfield of a console variable.",
	"C_Calendar.AddEvent": "Saves the new event currently being created to the server.",
	"C_Calendar.CanAddEvent": "Returns whether the player can add an event.",
	"C_Calendar.CanSendInvite": "Returns whether the player can send invites.",
	"C_Calendar.CloseEvent": "Closes the selected event without saving it.",
	"C_Calendar.ContextMenuEventCanComplain": "Returns whether the player can report the event as spam.",
	"C_Calendar.ContextMenuEventCanEdit": "Returns whether the player can edit the event.",
	"C_Calendar.ContextMenuEventCanRemove": "Returns whether the player can remove the event.",
	"C_Calendar.ContextMenuEventCopy": "Copies the event to the clipboard.",
	"C_Calendar.ContextMenuEventPaste": "Pastes the clipboard event to the date.",
	"C_Calendar.ContextMenuEventRemove": "Deletes the event.",
	"C_Calendar.ContextMenuInviteAvailable": "Accepts the invitation to the event.",
	"C_Calendar.ContextMenuInviteDecline": "Declines the invitation to the event.",
	"C_Calendar.ContextMenuInviteRemove": "Removes the event from the calendar.",
	"C_Calendar.CreatePlayerEvent": "Creates a new calendar event candidate for the player.",
	"C_Calendar.EventAvailable": "Accepts the invitation to the currently open event.",
	"C_Calendar.EventCanEdit": "Returns whether the event can be edited.",
	"C_Calendar.EventClearAutoApprove": "Turns off automatic confirmations.",
	"C_Calendar.EventClearLocked": "Unlocks the event.",
	"C_Calendar.EventDecline": "Declines the invitation to the currently open event.",
	"C_Calendar.EventGetInvite": "Returns status information for an invitee for the currently opened event.",
	"C_Calendar.EventHasPendingInvite": "Returns whether the player has an unanswered invitation to the currently selected event.",
	"C_Calendar.EventHaveSettingsChanged": "Returns whether the currently opened event has been modified.",
	"C_Calendar.EventInvite": "Invites a player to the currently selected event.",
	"C_Calendar.EventSetDate": "Sets the date for the currently opened event.",
	"C_Calendar.EventSetInviteStatus": "Sets the invitation status of a player to the current event.",
	"C_Calendar.EventSetTime": "Sets the time for the currently opened event.",
	"C_Calendar.EventSetTitle": "Sets the title for the currently opened event.",
	"C_Calendar.EventSetType": "Sets the event type for the current calendar event.",
	"C_Calendar.GetDayEvent": "Retrieve information about the specified event.",
	"C_Calendar.GetEventInfo": "Returns info for a calendar event.",
	"C_Calendar.GetHolidayInfo": "Returns seasonal holiday info.",
	"C_Calendar.GetMaxCreateDate": "Returns the last day supported by the Calendar API.",
	"C_Calendar.GetMinDate": "Returns the first day supported by the Calendar API.",
	"C_Calendar.GetMonthInfo": "Returns information about the calendar month by offset.",
	"C_Calendar.GetNumDayEvents": "Returns the number of events for a given day/month offset.",
	"C_Calendar.GetNumInvites": "Returns the number of invitees for the currently opened event.",
	"C_Calendar.OpenCalendar": "Requests calendar information from the server. Does not open the calendar frame.",
	"C_Calendar.OpenEvent": "Establishes an event for future calendar API calls",
	"C_Calendar.RemoveEvent": "Removes the selected event from the calendar (invitees only).",
	"C_Calendar.SetAbsMonth": "Sets the reference month and year for functions which use a month offset.",
	"C_Calendar.UpdateEvent": "Saves the selected event.",
	"C_ChatBubbles.GetAllChatBubbles": "Returns all active chat bubbles.",
	"C_ChatInfo.GetRegisteredAddonMessagePrefixes": "Returns addon message prefixes the client is currently registered to receive.",
	"C_ChatInfo.IsAddonMessagePrefixRegistered": "Returns whether the prefix is registered.",
	"C_ChatInfo.RegisterAddonMessagePrefix": "Registers an addon message prefix to receive messages for that prefix.",
	"C_ChatInfo.ReplaceIconAndGroupExpressions": "Replaces icon and group tags like {rt4}, {diamond} and {g1}.",
	"C_ChatInfo.SendAddonMessage": "Sends a message over an addon comm channel.",
	"C_ClassColor.GetClassColor": "Returns a ColorMixin for a class.",
	"C_Console.GetAllCommands": "Returns all console variables and commands.",
	"C_Console.GetColorFromType": "Returns color info for a color type.",
	"C_Console.GetFontHeight": "Returns the console's currently used font height.",
	"C_Console.PrintAllMatchingCommands": "Prints all matching console commands.",
	"C_Console.SetFontHeight": "Sets the console's font height.",
	"C_ContributionCollector.Close": "Closes the contribution collector API state.",
	"C_ContributionCollector.Contribute": "Contributes resources to a building.",
	"C_ContributionCollector.GetActive": "Returns the currently active buildings.",
	"C_ContributionCollector.GetAtlases": "Returns a table listing the possible states for a building.",
	"C_ContributionCollector.GetBuffs": "Returns the buffs provided by a building (e.g. in a [[Warfront]]).",
	"C_ContributionCollector.GetContributionAppearance": "Returns contribution appearance info.",
	"C_ContributionCollector.GetContributionCollectorsForMap": "Returns contribution buildings on a map.",
	"C_ContributionCollector.GetContributionResult": "Returns a value indicating the result of a contribution.",
	"C_ContributionCollector.GetDescription": "Returns the description of a building.",
	"C_ContributionCollector.GetManagedContributionsForCreatureID": "Returns contributions for a creature.",
	"C_ContributionCollector.GetName": "Returns the name of a building.",
	"C_ContributionCollector.GetOrderIndex": "Returns the order in which buildings are displayed.",
	"C_ContributionCollector.GetRequiredContributionCurrency": "Returns the currencyID and amount needed to contribute to a building.",
	"C_ContributionCollector.GetRequiredContributionItem": "Returns the itemID and amount needed to contribute to a building.",
	"C_ContributionCollector.GetRewardQuestID": "Returns the hidden quest that is flagged completed when a contribution is made.",
	"C_ContributionCollector.GetState": "Returns the current state of a building, its completion percentage, and time until next state change.",
	"C_ContributionCollector.HasPendingContribution": "Returns whether there is a pending contribution.",
	"C_ContributionCollector.IsAwaitingRewardQuestData": "Returns true if the client is waiting for quest reward data.",
	"C_CreatureInfo.GetClassInfo": "Returns info for a class by ID.",
	"C_CreatureInfo.GetFactionInfo": "Returns the faction name for a race.",
	"C_CreatureInfo.GetRaceInfo": "Returns both localized and locale-independent race names.",
	"C_CurrencyInfo.ExpandCurrencyList": "Expands/collapses a currency list header.",
	"C_CurrencyInfo.GetBackpackCurrencyInfo": "Returns info for a tracked currency in the backpack.",
	"C_CurrencyInfo.GetCurrencyInfo": "Returns info for a currency by ID.",
	"C_CurrencyInfo.GetCurrencyLink": "Returns a currency link.",
	"C_CurrencyInfo.GetCurrencyListInfo": "Returns info for a currency in the [[currency tab]].",
	"C_CurrencyInfo.GetCurrencyListSize": "Returns the amount of currencies and headers in the currency tab.",
	"C_CurrencyInfo.GetFactionGrantedByCurrency": "Gets the faction ID for currency that is immediately converted into reputation with that faction instead.",
	"C_CurrencyInfo.SetCurrencyBackpack": "Tracks a currency in the backpack.",
	"C_CurrencyInfo.SetCurrencyUnused": "Marks a currency as unused in the currency tab.",
	"C_DateAndTime.AdjustTimeByDays": "Returns the date after a specified amount of days.",
	"C_DateAndTime.CompareCalendarTime": "Compares two dates with eachother.",
	"C_DateAndTime.GetCalendarTimeFromEpoch": "Returns the date for a specified amount of time since the UNIX epoch for the OS time zone.",
	"C_DateAndTime.GetCurrentCalendarTime": "Returns the realm's current date and time.",
	"C_DateAndTime.GetServerTimeLocal": "Returns the server's [[Wikipedia:Unix_time|Unix time]] offset by the server's timezone.",
	"C_DeathInfo.GetCorpseMapPosition": "Returns the location of the player's corpse on the map.",
	"C_DeathInfo.GetDeathReleasePosition": "When the player is dead and hasn't released spirit, returns the location of the graveyard they will release to.",
	"C_DeathInfo.GetGraveyardsForMap": "Returns graveyard info and location for a map.",
	"C_DeathInfo.GetSelfResurrectOptions": "Returns self resurrect options for your character, including from soulstones.",
	"C_DeathInfo.UseSelfResurrectOption": "Uses a soulstone or similar means of self resurrection.",
	"C_EncounterJournal.GetDungeonEntrancesForMap": "Returns the instance entrances for a map.",
	"C_EncounterJournal.GetEncountersOnMap": "Returns boss pin locations for an instance map.",
	"C_EncounterJournal.GetLootInfo": "Returns info for loot items available from an encounter.",
	"C_EncounterJournal.GetSectionIconFlags": "Returns the icon flags for a section, such as Magic Effect and Heroic Difficulty",
	"C_EncounterJournal.GetSectionInfo": "Returns information about an entry in the Abilities section of the Encounter Journal.",
	"C_EncounterJournal.GetSlotFilter": "Returns the current item slot filter for loot items.",
	"C_EncounterJournal.InstanceHasLoot": "Returns whether an instance has a loot table in the journal.",
	"C_EncounterJournal.IsEncounterComplete": "Returns if a boss encounter has been completed.",
	"C_EncounterJournal.ResetSlotFilter": "Resets the item slot filter for loot items.",
	"C_EncounterJournal.SetSlotFilter": "Sets the item slot filter for loot items.",
	"C_EquipmentSet.AssignSpecToEquipmentSet": "Assigns an equipment set to a specialization.",
	"C_EquipmentSet.CanUseEquipmentSets": "Returns whether any equipment sets can be used.",
	"C_EquipmentSet.ClearIgnoredSlotsForSave": "Clears ignored slots for saving.",
	"C_EquipmentSet.CreateEquipmentSet": "Creates an equipment set.",
	"C_EquipmentSet.DeleteEquipmentSet": "Deletes an equipment set.",
	"C_EquipmentSet.EquipmentSetContainsLockedItems": "Returns whether an equipment set has locked items",
	"C_EquipmentSet.GetEquipmentSetAssignedSpec": "Returns the specialization assigned to an equipment set.",
	"C_EquipmentSet.GetEquipmentSetForSpec": "Returns the equipment set currently assigned to a specific specialization.",
	"C_EquipmentSet.GetEquipmentSetID": "Returns the set ID of an equipment set with the specified name.",
	"C_EquipmentSet.GetEquipmentSetIDs": "Returns an array containing all currently saved equipment set IDs.",
	"C_EquipmentSet.GetEquipmentSetInfo": "Returns information about a saved equipment set.",
	"C_EquipmentSet.GetIgnoredSlots": "Returns ignored slots of an equipment set.",
	"C_EquipmentSet.GetItemIDs": "Returns the item IDs of an equipment set.",
	"C_EquipmentSet.GetItemLocations": "Returns the location of all items in an equipment set.",
	"C_EquipmentSet.GetNumEquipmentSets": "Returns the number of saved equipment sets.",
	"C_EquipmentSet.IgnoreSlotForSave": "Ignores an equipment slot for saving.",
	"C_EquipmentSet.IsSlotIgnoredForSave": "Returns whether a slot is ignored for saving.",
	"C_EquipmentSet.ModifyEquipmentSet": "Modifies an equipment set.",
	"C_EquipmentSet.PickupEquipmentSet": "Picks up an equipment set, placing it on the cursor.",
	"C_EquipmentSet.SaveEquipmentSet": "Saves your currently equipped items into an equipment set.",
	"C_EquipmentSet.UnassignEquipmentSetSpec": "Unassigns an equipment set from a specialization.",
	"C_EquipmentSet.UnignoreSlotForSave": "Unignores a slot for saving.",
	"C_EquipmentSet.UseEquipmentSet": "Equips items from a specified equipment set.",
	"C_FogOfWar.GetFogOfWarForMap": "Returns the fog of war for an [[Island Expedition]] map.",
	"C_FogOfWar.GetFogOfWarInfo": "Returns info for the fog of war for an [[Island Expedition]] map.",
	"C_FriendList.AddFriend": "Adds a friend to your friend list.",
	"C_FriendList.AddIgnore": "Adds a player to your ignore list.",
	"C_FriendList.AddOrDelIgnore": "Adds or removes a player to/from the ignore list.",
	"C_FriendList.AddOrRemoveFriend": "Adds or removes a player to or from the friends list.",
	"C_FriendList.DelIgnore": "Removes a player from your ignore list.",
	"C_FriendList.DelIgnoreByIndex": "Removes a player from your ignore list.",
	"C_FriendList.GetFriendInfo": "Retrieves information about a person on your friends list.",
	"C_FriendList.GetIgnoreName": "Returns the name of a currently ignored player.",
	"C_FriendList.GetNumFriends": "Returns how many friends you have.",
	"C_FriendList.GetNumIgnores": "Returns the number of entries on your ignore list.",
	"C_FriendList.GetNumOnlineFriends": "Returns the number of online friends.",
	"C_FriendList.GetNumWhoResults": "Get the number of entries resulting from your most recent /who query.",
	"C_FriendList.GetSelectedFriend": "Returns the index of the currently selected friend.",
	"C_FriendList.GetSelectedIgnore": "Returns the currently selected index in the ignore listing.",
	"C_FriendList.GetWhoInfo": "Retrieves info about a character on your current /who list.",
	"C_FriendList.IsFriend": "Returns whether a character is your friend.",
	"C_FriendList.IsIgnored": "Returns whether a character is being ignored by you.",
	"C_FriendList.IsIgnoredByGuid": "Returns whether a character is being ignored by you.",
	"C_FriendList.RemoveFriend": "Removes a friend from the friends list.",
	"C_FriendList.RemoveFriendByIndex": "Removes a friend from the friends list.",
	"C_FriendList.SendWho": "Requests a list of other online players.",
	"C_FriendList.SetFriendNotes": "Sets the note text for a friend.",
	"C_FriendList.SetFriendNotesByIndex": "Sets the note text for a friend.",
	"C_FriendList.SetSelectedFriend": "Updates the current selected friend.",
	"C_FriendList.SetSelectedIgnore": "Sets the currently selected ignore entry.",
	"C_FriendList.SetWhoToUi": "Sets how the result of a [[MACRO who|/who]] request will be delivered.",
	"C_FriendList.ShowFriends": "Requests updated friends information from server.",
	"C_FriendList.SortWho": "Sorts the last [[MACRO_who|/who]] reply received by the client.",
	"C_Garrison.GetFollowers": "Returns a list of garrison tech followers.",
	"C_GossipInfo.CloseGossip": "Closes the gossip window.",
	"C_GossipInfo.ForceGossip": "Returns true if gossip text must be displayed. For example making this return true shows the Banker gossip.",
	"C_GossipInfo.GetActiveQuests": "Returns the quests which can be turned in at a quest giver.",
	"C_GossipInfo.GetAvailableQuests": "Returns the available quests at a quest giver.",
	"C_GossipInfo.GetNumActiveQuests": "Returns the number of active quests that you should eventually turn in to this NPC.",
	"C_GossipInfo.GetNumAvailableQuests": "Returns the number of quests (that you are not already on) offered by this NPC.",
	"C_GossipInfo.GetOptions": "Returns the available gossip options at a quest giver.",
	"C_GossipInfo.GetPoiForUiMapID": "Returns any gossip point of interest on the map.",
	"C_GossipInfo.GetPoiInfo": "Returns info for a gossip point of interest (e.g. the red flags when asking city guards for directions).",
	"C_GossipInfo.GetText": "Returns the gossip text.",
	"C_GossipInfo.SelectActiveQuest": "Selects an active quest from the gossip window.",
	"C_GossipInfo.SelectAvailableQuest": "Selects an available quest from the gossip window.",
	"C_GossipInfo.SelectOption": "Selects a gossip (conversation) option.",
	"C_GuildInfo.CanEditOfficerNote": "Returns true if the player can edit guild officer notes.",
	"C_GuildInfo.CanSpeakInGuildChat": "Returns true if the player can use guild chat.",
	"C_GuildInfo.CanViewOfficerNote": "Returns true if the player can view guild officer notes.",
	"C_GuildInfo.GetGuildRankOrder": "Returns the current rank of a guild member.",
	"C_GuildInfo.GuildControlGetRankFlags": "Returns the permission flags for a rank index.",
	"C_GuildInfo.GuildRoster": "Requests updated guild roster information from the server.",
	"C_GuildInfo.QueryGuildMemberRecipes": "Shows the guild member recipes for a profession.",
	"C_GuildInfo.RemoveFromGuild": "Removes a member from the guild.",
	"C_GuildInfo.SetGuildRankOrder": "Sets the guild rank for a member.",
	"C_GuildInfo.SetNote": "Sets the guild note for a member.",
	"C_IncomingSummon.HasIncomingSummon": "Returns whether a group member has an incoming summon.",
	"C_IncomingSummon.IncomingSummonStatus": "Returns the status of an group member's incoming summon.",
	"C_InvasionInfo.AreInvasionsAvailable": "Returns true if invasions are active in the same physical area as the player.",
	"C_InvasionInfo.GetInvasionForUiMapID": "Returns any invasion for a map.",
	"C_InvasionInfo.GetInvasionInfo": "Returns invasion info.",
	"C_InvasionInfo.GetInvasionTimeLeft": "Returns the time left for an invasion.",
	"C_IslandsQueue.CloseIslandsQueueScreen": "Closes the islands queue screen.",
	"C_IslandsQueue.GetIslandDifficultyInfo": "Returns the island expedition modes.",
	"C_IslandsQueue.GetIslandsMaxGroupSize": "Returns the max group size for expeditions.",
	"C_IslandsQueue.GetIslandsWeeklyQuestID": "Returns the weekly island quest.",
	"C_IslandsQueue.QueueForIsland": "Queues for an island expedition.",
	"C_IslandsQueue.RequestPreloadRewardData": "Preloads reward data for a quest id.",
	"C_ItemSocketInfo.CompleteSocketing": "Completes socketing an item, binding it to the player.",
	"C_KeyBindings.GetCustomBindingType": "Returns the type of a custom binding.",
	"C_LFGList.CreateListing": "Creates a group finder listing.",
	"C_LFGList.GetActiveEntryInfo": "Returns information about your currently listed group.",
	"C_LFGList.GetActivityGroupInfo": "Returns info for an activity group.",
	"C_LFGList.GetActivityInfoExpensive": "Returns the zone associated with an activity.",
	"C_LFGList.GetApplicantInfo": "Returns status informations and custom message of an applicant.",
	"C_LFGList.GetApplicantMemberInfo": "Returns info for an applicant.",
	"C_LFGList.GetApplicantMemberStats": "Returns the [[Proving Grounds]] stats of an applicant.",
	"C_LFGList.GetApplicants": "Returns the list of applicants to your group.",
	"C_LFGList.GetAvailableActivities": "Returns a list of available LFG activities.",
	"C_LFGList.GetAvailableActivityGroups": "Returns a list of available LFG groups.",
	"C_LFGList.GetAvailableCategories": "Returns a list of available LFG categories.",
	"C_LossOfControl.GetActiveLossOfControlData": "Returns info about an active loss-of-control effect.",
	"C_LossOfControl.GetActiveLossOfControlDataCount": "Returns the number of active loss-of-control effects.",
	"C_Mail.HasInboxMoney": "Returns true if a mail has money attached.",
	"C_Mail.IsCommandPending": "Returns true if the current mail command is still processing.",
	"C_Map.GetAreaInfo": "Returns a map subzone name.",
	"C_Map.GetBestMapForUnit": "Returns the current UI map for the given unit. Only works for the player and group members.",
	"C_Map.GetBountySetMaps": "Returns the maps for a bounty.",
	"C_Map.GetFallbackWorldMapID": "Returns the world map id.",
	"C_Map.GetMapArtBackgroundAtlas": "Returns the background atlas for a map.",
	"C_Map.GetMapArtHelpTextPosition": "Returns the position for the \"Click to Zoom In\" hint text on flight maps.",
	"C_Map.GetMapArtID": "Returns the art for a (phased) map.",
	"C_Map.GetMapArtLayerTextures": "Returns the art layer textures for a map.",
	"C_Map.GetMapArtLayers": "Returns the art layers for a map.",
	"C_Map.GetMapBannersForMap": "Returns the poi banners for a map.",
	"C_Map.GetMapChildrenInfo": "Returns info for the children of a map.",
	"C_Map.GetMapDisplayInfo": "Returns whether group member pins should be hidden.",
	"C_Map.GetMapGroupID": "Returns the map group for a map.",
	"C_Map.GetMapGroupMembersInfo": "Returns the floors for a map group.",
	"C_Map.GetMapHighlightInfoAtPosition": "Returns a map highlight pin for a location.",
	"C_Map.GetMapInfo": "Returns map information.",
	"C_Map.GetMapInfoAtPosition": "Returns info for any child or adjacent maps at a position on the map.",
	"C_Map.GetMapLevels": "Returns the suggested player and battle pet levels for a map.",
	"C_Map.GetMapLinksForMap": "Returns the map pins that link to another map.",
	"C_Map.GetMapPosFromWorldPos": "Translates a world map position to a map position.",
	"C_Map.GetPlayerMapPosition": "Returns the location of the unit on a map.",
	"C_Map.GetWorldPosFromMapPos": "Translates a map position to a world map position.",
	"C_Map.MapHasArt": "Returns true if the map has art and can be displayed by the FrameXML.",
	"C_Map.RequestPreloadMap": "Preloads textures for a map.",
	"C_MapExplorationInfo.GetExploredAreaIDsAtPosition": "Returns the explored areas for the location on a map.",
	"C_MapExplorationInfo.GetExploredMapTextures": "Returns explored map textures for a map.",
	"C_MountJournal.Dismiss": "Dismisses the currently summoned mount.",
	"C_MountJournal.GetCollectedFilterSetting": "Indicates whether the specified mount journal filter is enabled.",
	"C_MountJournal.GetIsFavorite": "Indicates whether the specified mount is marked as a favorite.",
	"C_MountJournal.GetMountAllCreatureDisplayInfoByID": "Returns the display IDs for a mount.",
	"C_MountJournal.GetMountFromItem": "Returns the mount for an item ID.",
	"C_MountJournal.GetMountFromSpell": "Returns the mount for a spell ID.",
	"C_MountJournal.GetMountIDs": "Returns the IDs of mounts listed in the mount journal.",
	"C_MountJournal.GetMountInfoByID": "Returns information about the specified mount.",
	"C_MountJournal.GetMountInfoExtraByID": "Returns extra information about the specified mount.",
	"C_MountJournal.GetMountUsabilityByID": "Returns if a mount is currently usable by the player.",
	"C_MountJournal.GetNumDisplayedMounts": "Returns the number of (filtered) mounts shown in the mount journal.",
	"C_MountJournal.GetNumMounts": "Returns the number of mounts listed in the mount journal.",
	"C_MountJournal.Pickup": "Picks up the specified mount onto the cursor, usually in preparation for placing it on an action button.",
	"C_MountJournal.SetCollectedFilterSetting": "Enables or disables the specified mount journal filter.",
	"C_MountJournal.SetIsFavorite": "Marks or unmarks the specified mount as a favorite.",
	"C_MountJournal.SummonByID": "Summons the specified mount.",
	"C_NewItems.ClearAll": "Clears the new item flag on all items in the player's inventory.",
	"C_NewItems.IsNewItem": "Returns true if the item in the inventory slot is flagged as new.",
	"C_NewItems.RemoveNewItem": "Clears the \"new item\" flag.",
	"C_PaperDollInfo.GetInspectItemLevel": "Returns the average item level for the unit being inspected.",
	"C_PartyInfo.ConvertToParty": "Converts a raid group with 5 or less members to a party.",
	"C_PartyInfo.GetInviteReferralInfo": "Returns info for Quick join invites.",
	"C_PartyInfo.InviteUnit": "Invites a player to your group.",
	"C_PartyInfo.LeaveParty": "Leaves the group.",
	"C_PartyPose.GetPartyPoseInfoByMapID": "Returns party pose info for an [[Island Expedition]] or [[Warfront]].",
	"C_PetInfo.GetPetTamersForMap": "Returns the pet tamers on a map.",
	"C_PetJournal.CagePetByID": "Puts the pet into a cage.",
	"C_PetJournal.ClearSearchFilter": "Clears the search box in the pet journal.",
	"C_PetJournal.GetBattlePetLink": "Returns a battle pet link.",
	"C_PetJournal.GetNumPetSources": "Returns information about the number of pet sources.",
	"C_PetJournal.GetNumPetTypes": "Returns information about the number of pet types.",
	"C_PetJournal.GetNumPets": "Returns information about the number of battle pets.",
	"C_PetJournal.GetOwnedBattlePetString": "Returns a formatted string how many of a battle pet species the player has collected.",
	"C_PetJournal.GetPetInfoByIndex": "Returns information about a battle pet.",
	"C_PetJournal.GetPetInfoByPetID": "Returns information about a battle pet.",
	"C_PetJournal.GetPetInfoBySpeciesID": "Returns information about a pet species.",
	"C_PetJournal.GetPetStats": "Returns the stats of a collected battle pet.",
	"C_PetJournal.GetSummonedPetGUID": "Returns information about a battle pet.",
	"C_PetJournal.PetCanBeReleased": "Returns true if you can release the pet.",
	"C_PetJournal.PetIsFavorite": "Returns true if the collected battle pet is favorited.",
	"C_PetJournal.PetIsSummonable": "Returns true if you can summon this pet.",
	"C_PetJournal.PetIsTradable": "Returns whether or not a pet from the Pet Journal is tradable.",
	"C_PetJournal.ReleasePetByID": "Releases the pet.",
	"C_PetJournal.SetCustomName": "Sets a custom name for the pet.",
	"C_PetJournal.SetFavorite": "Sets (or clears) the pet as a favorite.",
	"C_PetJournal.SetPetTypeFilter": "Sets the pet type in the filter menu.",
	"C_PetJournal.SetSearchFilter": "Sets the search filter in the pet journal.",
	"C_PetJournal.SummonPetByGUID": "Summons (or dismisses) a pet.",
	"C_PetJournal.SummonRandomPet": "Summons a random battle pet companion.",
	"C_PlayerInfo.CanPlayerUseMountEquipment": "Returns true if the player can use mount equipment.",
	"C_PlayerInfo.GUIDIsPlayer": "Returns true if the GUID belongs to a player.",
	"C_PlayerInfo.GetClass": "Returns the class of a player.",
	"C_PlayerInfo.GetGlidingInfo": "Returns the [[Dragonriding]] gliding speed.",
	"C_PlayerInfo.GetName": "Returns the name of a player.",
	"C_PlayerInfo.GetRace": "Returns the race of a player.",
	"C_PlayerInfo.GetSex": "Returns the sex of a player.",
	"C_PlayerInfo.IsConnected": "Returns true if the player is connected.",
	"C_PlayerInfo.UnitIsSameServer": "Returns true if a player is from the same or [[Connected Realm|connected]] realm.",
	"C_PvP.GetOutdoorPvPWaitTime": "Returns the time until the next battle in a PvP zone like Wintergrasp and Tol Barad.",
	"C_QuestLog.AbandonQuest": "Abandons the quest specified by {{api|C_QuestLog.SetAbandonQuest}}.",
	"C_QuestLog.AddQuestWatch": "Tracks a quest.",
	"C_QuestLog.AddWorldQuestWatch": "Tracks a world quest.",
	"C_QuestLog.GetAbandonQuest": "Returns the quest specified by {{api|C_QuestLog.SetAbandonQuest}}.",
	"C_QuestLog.GetAllCompletedQuestIDs": "Returns all completed quests for the character.",
	"C_QuestLog.GetInfo": "Returns information about a quest in the player's quest log.",
	"C_QuestLog.GetLogIndexForQuestID": "Returns the quest log index for a quest ID.",
	"C_QuestLog.GetMaxNumQuests": "This is the maximum number of quests a player can be on, including hidden quests, world quests, emissaries etc",
	"C_QuestLog.GetMaxNumQuestsCanAccept": "This is the maximum number of standard quests a player can accept. These are quests that are normally visible in the quest log.",
	"C_QuestLog.GetNumQuestLogEntries": "Returns the number of entries in the quest log.",
	"C_QuestLog.GetNumQuestWatches": "Returns the number of tracked quests.",
	"C_QuestLog.GetQuestObjectives": "Returns info for the objectives of a quest.",
	"C_QuestLog.GetQuestTagInfo": "Returns metadata for a quest.",
	"C_QuestLog.GetRequiredMoney": "Returns the amount of money required for quest completion.",
	"C_QuestLog.GetSelectedQuest": "Returns the quest specified by {{api|C_QuestLog.SetSelectedQuest}}.",
	"C_QuestLog.GetSuggestedGroupSize": "Returns the suggested number of players for a quest.",
	"C_QuestLog.GetTimeAllowed": "Returns the time available to complete a quest.",
	"C_QuestLog.GetTitleForQuestID": "Returns the name for a Quest ID.",
	"C_QuestLog.IsPushableQuest": "Returns true if the quest can be shared with other players.",
	"C_QuestLog.IsQuestFlaggedCompleted": "Returns if a quest has been completed.",
	"C_QuestLog.IsUnitOnQuest": "Returns true if the unit is on the specified quest.",
	"C_QuestLog.RemoveQuestWatch": "Untracks a quest.",
	"C_QuestLog.RemoveWorldQuestWatch": "Untracks a world quest.",
	"C_QuestLog.SetAbandonQuest": "Sets the selected quest to be abandoned.",
	"C_QuestLog.SetSelectedQuest": "Selects a quest in the quest log.",
	"C_QuestLog.SortQuestWatches": "Sorts watched quests by proximity to the player character.",
	"C_ReportSystem.CanReportPlayer": "Returns if a player can be reported.",
	"C_Reputation.GetFactionParagonInfo": "Returns [[Paragon reputation|Paragon]] info on a faction.",
	"C_Reputation.IsFactionParagon": "Returns true if a faction is a paragon reputation.",
	"C_ResearchInfo.GetDigSitesForMap": "Returns the dig sites on a map.",
	"C_Scenario.GetProvingGroundsInfo": "Returns info for the current [[Proving Grounds]] trial.",
	"C_StorePublic.IsDisabledByParentalControls": "Returns whether access to the in-game shop is disabled by parental controls.",
	"C_StorePublic.IsEnabled": "Returns whether the In-Game Store is available for the player.",
	"C_SummonInfo.CancelSummon": "Declines a summon request.",
	"C_SummonInfo.ConfirmSummon": "Accepts a summon request.",
	"C_SummonInfo.GetSummonConfirmAreaName": "Returns the zone where you will be summoned to.",
	"C_SummonInfo.GetSummonConfirmSummoner": "Returns the name of the player summoning you.",
	"C_SummonInfo.GetSummonConfirmTimeLeft": "Returns the time left in seconds for accepting a summon.",
	"C_Texture.GetAtlasInfo": "Returns atlas info.",
	"C_Timer.After": "Schedules a timer.",
	"C_ToyBox.GetToyInfo": "Returns toy info.",
	"C_ToyBox.GetToyLink": "Returns the item link for a toy.",
	"C_TradeSkillUI.CloseTradeSkill": "Closes an open trade skill window.",
	"C_TradeSkillUI.CraftRecipe": "Performs the tradeskill a specified number of times.",
	"C_TradeSkillUI.GetAllRecipeIDs": "Returns all recipes for the current profession.",
	"C_TradeSkillUI.GetRecipeDescription": "Returns the description for a recipe.",
	"C_TradeSkillUI.GetRecipeInfo": "Returns information for a recipe.",
	"C_TradeSkillUI.GetRecipeItemLink": "Returns the result item link for a recipe.",
	"C_TradeSkillUI.GetTradeSkillLineForRecipe": "Get the associated profession information for a recipe.",
	"C_TradeSkillUI.GetTradeSkillListLink": "Returns a link for the currently displayed profession.",
	"C_TradeSkillUI.IsNPCCrafting": "Returns true if the trade skill window is displayed for an NPC.",
	"C_TradeSkillUI.IsTradeSkillGuild": "Checks if the Trade Skill UI is open for a profession in the guild.",
	"C_TradeSkillUI.IsTradeSkillLinked": "Checks if the Trade Skill UI is open for a profession linked by another character.",
	"C_Transmog.ApplyAllPending": "Confirms all pending transmogs.",
	"C_Transmog.CanTransmogItemWithItem": "Returns whether an item can be transmogrified to look like another item.",
	"C_Transmog.ClearPending": "Clears an equipment slot of pending transmogs.",
	"C_Transmog.GetSlotForInventoryType": "Returns the equipment slot for an inventory type.",
	"C_UI.Reload": "Reloads the User Interface.",
	"C_UIWidgetManager.GetAllWidgetsBySetID": "Returns all widgets for a widget set ID.",
	"C_UIWidgetManager.GetTopCenterWidgetSetID": "Returns the widget set ID for the top center part of the screen.",
	"C_VideoOptions.GetGxAdapterInfo": "Returns info about the system's graphics adapter.",
	"CallCompanion": "Summons a companion.",
	"CameraOrSelectOrMoveStart": "Begin \"Left click\" in the 3D world.",
	"CameraOrSelectOrMoveStop": "Called when you release the \"Left-Click\" mouse button.",
	"CameraZoomIn": "Zooms the camera in.",
	"CameraZoomOut": "Zooms the camera out.",
	"CanBeRaidTarget": "Returns true if the unit can be marked with a raid target icon.",
	"CanEditMOTD": "Returns true if the player can edit the guild message of the day.",
	"CanGuildDemote": "Returns true if the player can demote guild members.",
	"CanGuildInvite": "Returns true if the player can invite new members to the guild.",
	"CanGuildPromote": "Returns true if the player can promote guild members.",
	"CanInspect": "Returns true if the player can inspect the unit.",
	"CanJoinBattlefieldAsGroup": "Returns true if the player can join a battlefield with a group.",
	"CanMerchantRepair": "Returns true if the merchant can repair items.",
	"CanReplaceGuildMaster": "Returns whether you can impeach the Guild Master due to inactivity.",
	"CanScanResearchSite": "Returns true if the character is on a [[digsite]].",
	"CanShowAchievementUI": "Returns if the AchievementUI can be displayed.",
	"CanShowResetInstances": "Returns true if the character can currently reset their instances.",
	"CanSummonFriend": "Returns whether you can RaF summon a particular unit.",
	"CanUseVoidStorage": "Returns if the player has access to the Void Storage.",
	"CancelAreaSpiritHeal": "Cancels the Spirit Healer's resurrection in battlegrounds.",
	"CancelDuel": "Forfeits the current duel or declines a duel invitation.",
	"CancelItemTempEnchantment": "Removes temporary weapon enchants (e.g. Rogue poisons and sharpening stones).",
	"CancelLogout": "Cancels the logout timer (from camping or quitting).",
	"CancelPendingEquip": "Cancels a pending equip confirmation.",
	"CancelShapeshiftForm": "Cancels a shapeshift form.",
	"CancelTrade": "Declines the current trade offer.",
	"CancelUnitBuff": "Removes a specific buff from the character.",
	"CaseAccentInsensitiveParse": "Converts a string with accented letters to lowercase.",
	"CastPetAction": "Cast the corresponding pet skill.",
	"CastSpell": "Casts a spell from the spellbook.",
	"CastSpellByName": "Casts a spell by name.",
	"ChangeActionBarPage": "Changes the current action bar page.",
	"ChangeChatColor": "Updates the color for a type of chat message.",
	"ChannelBan": "Bans a player from the specified channel.",
	"ChannelInvite": "Invites the specified user to the channel.",
	"ChannelKick": "Kicks a player from the specified channel.",
	"ChannelModerator": "Sets the specified player as the channel moderator.",
	"ChannelToggleAnnouncements": "Toggles the channel to display announcements either on or off.",
	"ChannelUnban": "Unbans a player from the specified channel.",
	"ChannelUnmoderator": "Takes the specified user away from the moderator status.",
	"CheckInbox": "Queries the server for mail.",
	"CheckInteractDistance": "Returns true if the player is in range to perform a specific interaction with the unit.",
	"ClearCursor": "Clears any objects from the cursor.",
	"ClearFocus": "Clears the focus target.",
	"ClearOverrideBindings": "Removes all override bindings owned by a specific frame.",
	"ClearSendMail": "Clears the text and item attachments in the Send Mail tab.",
	"ClearTarget": "Clears the selected target.",
	"ClearVoidTransferDepositSlot": "Clears the specified Void Transfer deposit slot.",
	"ClickSendMailItemButton": "Drops or picks up an item from the cursor to the Send Mail tab.",
	"ClickVoidStorageSlot": "Clicks the specified Void Storage slot.",
	"ClickVoidTransferDepositSlot": "Clicks the specified Void Transfer deposit slot.",
	"ClickVoidTransferWithdrawalSlot": "Clicks the specified Void Transfer withdrawal slot.",
	"CloseBankFrame": "Closes the bank window.",
	"CloseItemText": "Close an open item text (book, plaque, etc).",
	"CloseMail": "Closes the mail window.",
	"CloseMerchant": "Closes the merchant window.",
	"ClosePetStables": "Closes the pet stable window.",
	"ClosePetition": "Closes the current petition.",
	"CloseSocketInfo": "Cancels pending gems for socketing.",
	"CloseTaxiMap": "Closes the [[Flight Map]].",
	"CloseTrade": "Closes the trade window.",
	"CloseTrainer": "Closes the trainer window.",
	"ClosestUnitPosition": "Returns the unit position of the closest creature by ID. Only works for mobs in the starting zones.",
	"CollapseFactionHeader": "Collapse a faction header row.",
	"CombatLogGetCurrentEventInfo": "Returns the current {{api|t=e|COMBAT_LOG_EVENT}} payload.",
	"CombatTextSetActiveUnit": "Changes the entity for which {{api|t=e|COMBAT_TEXT_UPDATE}} events fire.",
	"CompleteQuest": "Continues the quest dialog to the reward selection step.",
	"ConfirmAcceptQuest": "Accepts a quest started by a group member (e.g. escort quests).",
	"ConfirmLootRoll": "Confirms a loot roll.",
	"ConfirmLootSlot": "Confirms looting of a BoP item.",
	"ConfirmReadyCheck": "Responds to a ready check.",
	"ConsoleExec": "Execute a console command.",
	"CreateFont": "Creates a {{api|t=o|Font}} object.",
	"CreateFrame": "Creates a {{api|t=o|Frame}} object.",
	"CreateMacro": "Creates a macro.",
	"CursorHasItem": "Returns true if the cursor currently holds an item.",
	"DeclineGroup": "Declines an invitation to a group.",
	"DeclineGuild": "Declines a guild invite.",
	"DeclineName": "Returns suggested [[wikipedia:Russian_declension#Nouns|declensions]] for a Russian name.",
	"DeclineQuest": "Declines the currently offered quest.",
	"DeclineResurrect": "Declines a resurrection offer.",
	"DeleteCursorItem": "Destroys the item held by the cursor.",
	"DeleteInboxItem": "Requests the server to remove a mailbox message.",
	"DeleteMacro": "Deletes a macro.",
	"DescendStop": "Stops descending while flying or swimming.",
	"DestroyTotem": "Destroys a totem/minion.",
	"DisableAddOn": "Disables an addon for subsequent sessions.",
	"DisableAllAddOns": "Disable all AddOns for subsequent sessions.",
	"DismissCompanion": "Dismisses the current companion.",
	"Dismount": "Dismounts the character.",
	"DisplayChannelOwner": "Prints the name of the owner of the specified channel.",
	"DoEmote": "Performs an emote.",
	"DoReadyCheck": "Initiates a ready check.",
	"DropCursorMoney": "Drops money held by the cursor back into your bag.",
	"DropItemOnUnit": "Drops an item from the cursor onto a unit, i.e. to initiate a trade.",
	"EditMacro": "Modifies an existing macro.",
	"EnableAddOn": "Enables an addon for subsequent sessions.",
	"EnableAllAddOns": "Enable all AddOns for subsequent sessions.",
	"EnumerateFrames": "Returns the frame which follows the current frame.",
	"EnumerateServerChannels": "Returns all available server channels (zone dependent).",
	"EquipCursorItem": "Equips the currently picked up item to a specific inventory slot.",
	"EquipItemByName": "Equips an item, optionally into a specified slot.",
	"EquipPendingItem": "Equips the currently pending Bind-on-Equip or Bind-on-Pickup item from the specified inventory slot.",
	"ExecuteVoidTransfer": "Applies all pending void transfers (and pays for the cost of any deposited items).",
	"ExpandFactionHeader": "Expand a faction header row.",
	"ExpandQuestHeader": "Expands/collapses a quest log header.",
	"FactionToggleAtWar": "Toggles the [[At War]] status for a faction.",
	"FillLocalizedClassList": "Fills a table with localized male or female class names.",
	"FlashClientIcon": "Flashes the game client icon in the Operating System.",
	"FlipCameraYaw": "Rotates the camera around the Z-axis.",
	"FocusUnit": "Sets the [[focus target]].",
	"FollowUnit": "Follows a friendly player unit.",
	"ForceQuit": "Instantly quits the game, ignoring the 20 seconds timer.",
	"GetAccountExpansionLevel": "Returns the expansion level the account has been flagged for.",
	"GetAchievementCategory": "Returns the category number the requested achievement belongs to.",
	"GetAchievementComparisonInfo": "Returns information about the comparison unit's achievements.",
	"GetAchievementCriteriaInfo": "Returns info for the specified achievement criteria.",
	"GetAchievementInfo": "Returns info for an achievement.",
	"GetAchievementLink": "Returns an achievement link.",
	"GetAchievementNumCriteria": "Returns the number of criteria for an achievement.",
	"GetActionBarPage": "Returns the current action bar page.",
	"GetActionBarToggles": "Returns the enabled states for the extra action bars.",
	"GetActionCharges": "Returns information about the charges of a charge-accumulating player ability.",
	"GetActionCooldown": "Returns cooldown info for the specified action slot.",
	"GetActionCount": "Returns the available number of uses for an action.",
	"GetActionInfo": "Returns info for an action.",
	"GetActionText": "Returns the label text for an action.",
	"GetActionTexture": "Returns the icon texture for an action.",
	"GetActiveArtifactByRace": "Returns the active Archaeology artifact for a race.",
	"GetActiveSpecGroup": "Returns the index of the current active specialization/talent/glyph group.",
	"GetAddOnCPUUsage": "Returns the total time used for an addon.",
	"GetAddOnDependencies": "Returns the TOC dependencies of an addon.",
	"GetAddOnInfo": "Get information about an AddOn.",
	"GetAddOnMemoryUsage": "Returns the memory used for an addon.",
	"GetArchaeologyInfo": "Returns the localized name for the Archaeology profession.",
	"GetArchaeologyRaceInfo": "Returns the information for a specific race used in Archaeology.",
	"GetArchaeologyRaceInfoByID": "Returns info for an Archaeology race.",
	"GetAreaSpiritHealerTime": "Returns the time left in seconds until the next Spirit Healer resurrection in battlegrounds.",
	"GetArtifactInfoByRace": "Returns the information for a specific race's artifact.",
	"GetArtifactProgress": "Returns progress info for the selected Archaeology artifact.",
	"GetAttackPowerForStat": "Returns the amount of attack power contributed by a specific amount of a stat.",
	"GetAutoCompleteResults": "Returns possible player names matching a given prefix string and specified requirements.",
	"GetAutoDeclineGuildInvites": "Returns true if guild invites are being automatically declined.",
	"GetAutoQuestPopUp": "Returns info for a popup quest notification.",
	"GetAvailableQuestInfo": "Returns info for an available quest.",
	"GetAverageItemLevel": "Returns the character's average item level.",
	"GetBankSlotCost": "Returns the cost of the next bank bag slot.",
	"GetBattlefieldEstimatedWaitTime": "Returns the estimated queue time to enter the battlefield.",
	"GetBattlefieldInstanceExpiration": "Get shutdown timer for the battlefield instance.",
	"GetBattlefieldInstanceRunTime": "Returns the time passed since the battlefield started.",
	"GetBattlefieldPortExpiration": "Returns the remaining seconds before the battlefield port expires.",
	"GetBattlefieldScore": "Returns info for a player's score in battlefields.",
	"GetBattlefieldStatData": "Returns battlefield-specific info for a player (e.g. Warsong Gulch flag captures).",
	"GetBattlefieldStatus": "Returns the status of the battlefield the player is either queued for or inside.",
	"GetBattlefieldTeamInfo": "Returns info for an Arena team at the end of the match.",
	"GetBattlefieldTimeWaited": "Returns the time the player has waited in the queue.",
	"GetBattlefieldWinner": "Returns the winner of the battlefield.",
	"GetBattlegroundInfo": "Returns information about a battleground type.",
	"GetBestRFChoice": "Returns the suggested raid for the Raid Finder.",
	"GetBillingTimeRested": "Returns the amount of \"healthy\" time left for players on Chinese realms.",
	"GetBindLocation": "Returns the subzone the character's Hearthstone is set to.",
	"GetBinding": "Returns the name and keys for a binding by index.",
	"GetBindingAction": "Returns the binding name for a key (combination).",
	"GetBindingByKey": "Returns the binding action performed when the specified key combination is triggered.",
	"GetBindingKey": "Returns the keys bound to the given command.",
	"GetBindingText": "Returns the string for the given key and prefix. Essentially a specialized getglobal() for bindings.",
	"GetBlockChance": "Returns the block chance percentage.",
	"GetBonusBarOffset": "Returns the current bonus action bar index (e.g. for the Rogue stealth bar).",
	"GetBuildInfo": "Returns info for the current client build.",
	"GetBuybackItemInfo": "Returns info for an item that can be bought back from a merchant.",
	"GetCVarInfo": "Returns information on a console variable.",
	"GetCameraZoom": "Returns the current zoom level of the camera.",
	"GetCategoryInfo": "Returns info for an achievement category.",
	"GetCategoryList": "Returns the list of achievement categories.",
	"GetCategoryNumAchievements": "Returns the number of achievements for a category.",
	"GetChannelDisplayInfo": "Returns info for chat channels and headers in the Chat Pane.",
	"GetChannelList": "Returns the list of joined chat channels.",
	"GetChannelName": "Returns info for a chat channel.",
	"GetChatTypeIndex": "Returns the index for a chat type.",
	"GetChatWindowChannels": "Returns subscribed channels for a chat window.",
	"GetChatWindowInfo": "Returns info for a chat window.",
	"GetChatWindowMessages": "Returns subscribed message types for a chat window.",
	"GetClassInfo": "Returns information about a class.",
	"GetClientDisplayExpansionLevel": "Returns the expansion level of the game client.",
	"GetCoinText": "Breaks up an amount of money into gold/silver/copper.",
	"GetCoinTextureString": "Breaks up an amount of money into gold/silver/copper with icons.",
	"GetCombatRating": "Returns a specific combat rating.",
	"GetCombatRatingBonus": "Returns the bonus percentage for a specific combat rating.",
	"GetComboPoints": "Returns the amount of current combo points.",
	"GetCompanionInfo": "Returns info for a companion.",
	"GetComparisonStatistic": "Returns the specified statistic from the comparison player unit.",
	"GetCritChance": "Returns the melee critical hit chance percentage.",
	"GetCurrentArenaSeason": "Returns the current arena season.",
	"GetCurrentBindingSet": "Returns if either account or character-specific bindings are active.",
	"GetCurrentTitle": "Returns the current [[title]].",
	"GetCursorInfo": "Returns what the mouse cursor is holding.",
	"GetCursorMoney": "Returns the amount of money held by the cursor.",
	"GetCursorPosition": "Returns the cursor's position on the screen.",
	"GetDefaultLanguage": "Returns the character's default language.",
	"GetDetailedItemLevelInfo": "Returns detailed item level info.",
	"GetDifficultyInfo": "Returns information about a difficulty.",
	"GetDodgeChance": "Returns the dodge chance percentage.",
	"GetDungeonDifficultyID": "Returns the selected dungeon difficulty.",
	"GetExpansionLevel": "Returns the expansion level currently accessible by the player.",
	"GetExpertise": "Returns the player's expertise percentage for main hand, offhand and ranged attacks.",
	"GetFactionInfo": "Returns info for a faction.",
	"GetFileIDFromPath": "Returns the FileID for an Interface file path.",
	"GetFilteredAchievementID": "Returns the ID of a filtered achievement by index.",
	"GetFonts": "Returns a list of available fonts.",
	"GetFrameCPUUsage": "Returns the total time used by and number of calls of a frame's event handlers.",
	"GetFramerate": "Returns the current framerate.",
	"GetFramesRegisteredForEvent": "Returns all frames registered for the specified event, in dispatch order.",
	"GetGameMessageInfo": "Returns the error message for an id.",
	"GetGameTime": "Returns the realm's current time in hours and minutes.",
	"GetGraphicsAPIs": "Returns the supported graphics APIs for the system, D3D11_LEGACY, D3D11, D3D12, etc.",
	"GetGuildBankItemInfo": "Returns item info for a guild bank slot.",
	"GetGuildBankItemLink": "Returns the item link for a guild bank slot.",
	"GetGuildBankMoney": "Returns the amount of money in the guild bank.",
	"GetGuildBankMoneyTransaction": "Returns info for a money transaction from the guild bank.",
	"GetGuildBankTabInfo": "Returns info for a guild bank tab.",
	"GetGuildBankTabPermissions": "Gets display / player's access info. Limited data available without bank proximity.",
	"GetGuildBankTransaction": "Returns info for an item transaction from the guild bank.",
	"GetGuildBankWithdrawGoldLimit": "Returns withdraw limit for currently selected rank in guild control.",
	"GetGuildFactionInfo": "Returns the guild name and faction standing of the player.",
	"GetGuildInfo": "Returns guild info for a player unit.",
	"GetGuildRosterInfo": "Returns info for a guild member.",
	"GetGuildRosterLastOnline": "Returns time since the guild member was last online.",
	"GetGuildRosterMOTD": "Returns the guild message of the day.",
	"GetGuildRosterSelection": "Returns the index of the selected guild member in the roster.",
	"GetGuildRosterShowOffline": "Returns true if the guild roster is showing offline members.",
	"GetGuildTabardFiles": "Returns File IDs of tabard textures used in guild bank logo.",
	"GetGuildTradeSkillInfo": "Returns info for a profession in the guild roster.",
	"GetHaste": "Returns the player's haste percentage.",
	"GetInboxHeaderInfo": "Returns info for a message in the mailbox.",
	"GetInboxInvoiceInfo": "Returns info for an auction house invoice.",
	"GetInboxItem": "Returns info for an item attached to a message in the mailbox.",
	"GetInboxItemLink": "Returns the item link of an item attached to a message in the mailbox.",
	"GetInboxNumItems": "Returns the number of messages in the mailbox.",
	"GetInboxText": "Returns the text of a message in the mailbox.",
	"GetInspectHonorData": "Returns honor info for the inspected player unit.",
	"GetInspectSpecialization": "Returns the specialization for the inspected player unit.",
	"GetInstanceInfo": "Returns info for the map instance the character is currently in.",
	"GetInstanceLockTimeRemaining": "Returns info for the instance lock timer for the current instance.",
	"GetInstanceLockTimeRemainingEncounter": "Returns information about bosses in the instance the player is about to be saved to.",
	"GetInventoryAlertStatus": "Returns the durability status of an equipped item.",
	"GetInventoryItemBroken": "Returns true if an inventory item has zero durability.",
	"GetInventoryItemCooldown": "Get cooldown information for an inventory item.",
	"GetInventoryItemCount": "Determine the quantity of an item in an inventory slot.",
	"GetInventoryItemDurability": "Returns the durability of an equipped item.",
	"GetInventoryItemID": "Returns the item ID for an equipped item.",
	"GetInventoryItemLink": "Returns the item link for an equipped item.",
	"GetInventoryItemQuality": "Returns the quality of an equipped item.",
	"GetInventoryItemTexture": "Returns the texture for an equipped item.",
	"GetInventorySlotInfo": "Returns info for an equipment slot.",
	"GetItemClassInfo": "Returns the name of the item type.",
	"GetItemCooldown": "Returns cooldown info for an item ID.",
	"GetItemCount": "Returns the number (or available charges) of an item in the inventory.",
	"GetItemFamily": "Returns the bag type that an item can go into, or for bags the type of items that it can contain.",
	"GetItemIcon": "Returns the icon texture for an item.",
	"GetItemInfo": "Returns info for an item.",
	"GetItemInfoInstant": "Returns readily available info for an item.",
	"GetItemQualityColor": "Returns the color for an item quality.",
	"GetItemSpell": "Returns the spell effect for an item.",
	"GetItemStats": "Returns a table of stats for an item.",
	"GetItemSubClassInfo": "Returns the name of the item subtype.",
	"GetLFGBootProposal": "Returns info for a LFG votekick in progress.",
	"GetLFGDeserterExpiration": "Returns the time at which you may once again use the dungeon finder after prematurely leaving a group.",
	"GetLFGDungeonInfo": "Returns info for a LFG dungeon.",
	"GetLFGDungeonRewardCapBarInfo": "Returns the weekly limits reward for a currency (e.g. Valor Point Cap).",
	"GetLFGQueueStats": "Returns info for the current LFG queue.",
	"GetLFGRandomCooldownExpiration": "Returns the time at which you may once again queue for a random dungeon.",
	"GetLFGRoleShortageRewards": "Returns info for the LFG [[Call_to_Arms_(dungeon)|Call to Arms]] rewards.",
	"GetLFGRoles": "Returns the roles the player signed up for in the Dungeon Finder.",
	"GetLanguageByIndex": "Returns the languages that the character can speak by index.",
	"GetLatestThreeSenders": "Returns up to three senders of unread mail.",
	"GetLocale": "Returns the game client locale.",
	"GetLootMethod": "Returns the current loot method.",
	"GetLootSlotInfo": "Returns info for a loot slot.",
	"GetLootSlotLink": "Returns the item link for a loot slot.",
	"GetLootSourceInfo": "Returns information about the source of the objects in a loot slot.",
	"GetLootThreshold": "Returns the loot threshold quality for e.g. master loot.",
	"GetMacroBody": "Returns the body (macro text) of a macro.",
	"GetMacroIndexByName": "Returns the index for a macro by name.",
	"GetMacroInfo": "Returns info for a macro.",
	"GetManaRegen": "Returns the mana regeneration per second.",
	"GetMasterLootCandidate": "Returns the name of an eligible player for receiving master loot by index.",
	"GetMastery": "Returns the base mastery percentage.",
	"GetMasteryEffect": "Returns the effective mastery percentage.",
	"GetMaxBattlefieldID": "Returns the max number of battlefields you can queue for.",
	"GetMaxTalentTier": "Returns the number of available talent tiers.",
	"GetMeleeHaste": "Returns the player's melee haste percentage.",
	"GetMerchantItemCostInfo": "Returns \"alternative currency\" information about an item.",
	"GetMerchantItemCostItem": "Returns info for the currency cost for a merchant item.",
	"GetMerchantItemInfo": "Returns info for a merchant item.",
	"GetMerchantItemLink": "Returns the item link for a merchant item.",
	"GetMerchantItemMaxStack": "Returns the maximum stack size for a merchant item.",
	"GetMerchantNumItems": "Returns the number of different items a merchant sells.",
	"GetMinimapZoneText": "Returns the zone text that is displayed over the minimap.",
	"GetMirrorTimerInfo": "Returns info for the mirror timer, e.g. fatigue, breath and feign death.",
	"GetMirrorTimerProgress": "Returns the current value of the mirror timer.",
	"GetMoney": "Returns the amount of money the player character owns.",
	"GetMouseButtonClicked": "Returns the mouse button responsible during an OnClick event (e.g. \"RightButton\").",
	"GetMouseFocus": "Returns the frame that currently has mouse focus.",
	"GetMultiCastTotemSpells": "Returns a list of valid spells for a totem bar slot.",
	"GetNetStats": "Returns bandwidth and latency network information.",
	"GetNextAchievement": "Returns the next achievement in a chain.",
	"GetNumActiveQuests": "Returns the number of quests which can be turned in at a non-gossip quest giver.",
	"GetNumAddOns": "Get the number of user supplied AddOns.",
	"GetNumArchaeologyRaces": "Returns the number of Archaeology races in the game.",
	"GetNumArtifactsByRace": "Returns the amount of artifacts the player has acquired from the provided race.",
	"GetNumAutoQuestPopUps": "Returns the number of displayed popup quest notifications.",
	"GetNumAvailableQuests": "Returns the number of available quests at a non-gossip quest giver.",
	"GetNumBankSlots": "Returns the number of purchased bank bag slots.",
	"GetNumBattlefieldScores": "Returns the number of players listed in the battlefield scoreboard.",
	"GetNumBindings": "Returns the number of bindings and headers in the key bindings window.",
	"GetNumBuybackItems": "Returns the number of items available for buyback.",
	"GetNumClasses": "Returns the number of player classes in the game.",
	"GetNumCompanions": "Returns the number of mounts.",
	"GetNumComparisonCompletedAchievements": "Returns the number of completed achievements for the comparison player.",
	"GetNumCompletedAchievements": "Returns the total and completed number of achievements.",
	"GetNumDeclensionSets": "Returns the number of suggested declension sets for a Russian name.",
	"GetNumFactions": "Returns the number of lines in the faction display.",
	"GetNumFilteredAchievements": "Returns the number of achievements after filtering.",
	"GetNumGroupMembers": "Returns the number of players in the group.",
	"GetNumGuildMembers": "Returns the number of total and online guild members.",
	"GetNumLanguages": "Returns the number of languages your character can speak.",
	"GetNumLootItems": "Returns the number of items in the loot window.",
	"GetNumMacros": "Returns the number of account and character macros.",
	"GetNumPetitionNames": "Returns the number of signatures on the current petition.",
	"GetNumQuestChoices": "Returns the number of available rewards for the current quest.",
	"GetNumQuestItems": "Returns the number of required items to complete the current quest.",
	"GetNumQuestLeaderBoards": "Returns the number of objectives for a quest.",
	"GetNumQuestLogChoices": "Returns the number of options someone has when getting a quest item.",
	"GetNumQuestLogRewards": "Returns the number of unconditional rewards for the current quest in the quest log.",
	"GetNumQuestRewards": "Returns the number of unconditional rewards at a quest giver.",
	"GetNumSavedInstances": "Returns the number of instances for which the character is locked out.",
	"GetNumSockets": "Returns the number of sockets for an item in the socketing window.",
	"GetNumSpecGroups": "Returns the number of specialization group (dual specs) the player has.",
	"GetNumSpecializations": "Returns the number of available specializations.",
	"GetNumSpecializationsForClassID": "Returns the number of specializations available to a particular class.",
	"GetNumSpellTabs": "Returns the number of tabs in the spellbook.",
	"GetNumSubgroupMembers": "Returns the number of other players in the party or raid subgroup.",
	"GetNumTitles": "Returns the number of titles, specifically the highest title ID.",
	"GetNumTrainerServices": "Returns the number of trainer services.",
	"GetNumUnspentTalents": "Returns the number of unspent talents.",
	"GetNumVoidTransferDeposit": "Returns the number of items being deposited into the Void Storage.",
	"GetNumVoidTransferWithdrawal": "Returns the number of items being withdrawed from the Void Storage.",
	"GetOptOutOfLoot": "Returns true if the player is automatically passing on all loot.",
	"GetPVPDesired": "Returns true if the player has enabled their PvP flag.",
	"GetPVPLifetimeStats": "Returns the character's lifetime PvP statistics.",
	"GetPVPSessionStats": "Returns the character's Honor statistics for this session.",
	"GetPVPTimer": "Returns the time left in milliseconds until the player is unflagged for PvP.",
	"GetPVPYesterdayStats": "Returns the character's Honor statistics for yesterday.",
	"GetParryChance": "Returns the parry chance percentage.",
	"GetPartyAssignment": "Returns true if a group member is assigned the main tank/assist role.",
	"GetPetActionCooldown": "Returns cooldown info for an action on the pet action bar.",
	"GetPetActionInfo": "Returns info for an action on the pet action bar.",
	"GetPetExperience": "Returns the pet's current and total XP required for the next level.",
	"GetPetFoodTypes": "Returns the food types the pet can eat.",
	"GetPetitionInfo": "Returns info for the petition being viewed.",
	"GetPlayerFacing": "Returns the direction the character is facing in radians.",
	"GetPlayerInfoByGUID": "Returns character info for another player from their GUID.",
	"GetPlayerTradeMoney": "Returns the amount of money the player has in the trade window.",
	"GetPossessInfo": "Returns info for an action on the possession bar.",
	"GetPreviousAchievement": "Returns the previous achievement in a chain.",
	"GetProfessionInfo": "Gets details on a profession from its index including name, icon, and skill level.",
	"GetProfessions": "Returns the spell tab indices of the character's current professions.",
	"GetProgressText": "Returns quest progress text at a quest giver.",
	"GetQuestBackgroundMaterial": "Returns the background texture for the displayed quest.",
	"GetQuestID": "Returns the ID of the displayed quest at a quest giver.",
	"GetQuestItemInfo": "Returns info for a required/reward/choice quest item.",
	"GetQuestItemLink": "Returns the item link for a required/reward/choice quest item.",
	"GetQuestLink": "Returns a [[QuestLink]] for a quest.",
	"GetQuestLogChoiceInfo": "Returns a bunch of data about a quest reward choice from the quest log.",
	"GetQuestLogItemLink": "Returns item link for selected quest reward/choice/required item from quest log.",
	"GetQuestLogLeaderBoard": "Returns info for a quest objective in the quest log.",
	"GetQuestLogQuestText": "Returns the description and objective text in the quest log.",
	"GetQuestLogRewardInfo": "Returns info for an unconditional quest reward item in the quest log.",
	"GetQuestLogRewardMoney": "Returns the amount of money rewarded for a quest.",
	"GetQuestLogTimeLeft": "Returns the time left in seconds for the current quest.",
	"GetQuestResetTime": "Returns the number of seconds until daily quests reset.",
	"GetQuestReward": "Completes the quest and chooses a quest reward, if applicable.",
	"GetRaidDifficultyID": "Returns the player's currently selected raid difficulty.",
	"GetRaidRosterInfo": "Returns info for a member of your raid.",
	"GetRaidTargetIndex": "Returns the [[Target marker|raid target]] of a unit.",
	"GetRangedCritChance": "Returns the ranged critical hit chance.",
	"GetRealZoneText": "Returns the map instance name.",
	"GetRealmName": "Returns the realm name.",
	"GetRestState": "Returns if the character is in a [[Rest|rested]] or normal state.",
	"GetRestrictedAccountData": "Returns the cap on trial character level, money and profession skill.",
	"GetRewardText": "Returns quest reward text, displayed by the NPC before the player hits \"Complete Quest\".",
	"GetRewardXP": "Returns the [[experience]] reward for the quest in the gossip window.",
	"GetRuneCooldown": "Returns the Death Knight's cooldown info for the specified rune.",
	"GetRuneCount": "Returns the Death Knight's number of runes for a slot.",
	"GetSavedInstanceInfo": "Returns instance lock info.",
	"GetScreenHeight": "Returns the height of the window in pixels, affected by UI scale.",
	"GetScreenWidth": "Returns the width of the window in pixels, affected by UI scale.",
	"GetSelectedArtifactInfo": "Returns info for the selected race's Archaeology artifact.",
	"GetSendMailCOD": "Returns the Cash-On-Delivery cost of the outgoing message.",
	"GetSendMailItem": "Returns info for an item attached in the outgoing message.",
	"GetSendMailItemLink": "Returns the item link of an item attached in the outgoing message.",
	"GetSendMailPrice": "Gets the cost for sending mail.",
	"GetServerExpansionLevel": "Returns the expansion level currently active on the server.",
	"GetServerTime": "Returns the server's [[Wikipedia:Unix_time|Unix time]].",
	"GetSessionTime": "Returns the time since you opened the game client.",
	"GetShapeshiftForm": "Returns the zero-based index of current form/stance.",
	"GetShapeshiftFormID": "Returns the ID of the form or stance the player is currently in.",
	"GetShapeshiftFormInfo": "Returns info for an available form or stance.",
	"GetSheathState": "Returns which type of weapon the player currently has unsheathed.",
	"GetSocketItemBoundTradeable": "Returns true if the item currently being socketed can be traded to other eligible players (BoP boss loot).",
	"GetSocketItemInfo": "Returns info for the item currently being socketed.",
	"GetSocketItemRefundable": "Returns whether the item currently being socketed is refundable.",
	"GetSocketTypes": "Returns the type (color) of a socket in the item.",
	"GetSpecialization": "Returns the index of the player's current specialization.",
	"GetSpecializationInfo": "Returns info for a specialization.",
	"GetSpecializationMasterySpells": "Returns the mastery spell ID of the specified specialization.",
	"GetSpecializationRole": "Returns the role a specialization is intended to perform.",
	"GetSpecializationRoleByID": "Returns the role a specialization is intended to perform.",
	"GetSpecializationSpells": "Returns the spells learned as part of the specified specialization.",
	"GetSpellAutocast": "Returns true if a (pet) spell is autocastable.",
	"GetSpellBonusDamage": "Returns the raw spell damage bonus for the specified spell tree.",
	"GetSpellBonusHealing": "Returns the raw spell healing bonus.",
	"GetSpellBookItemInfo": "Returns info for a [[spellbook]] item.",
	"GetSpellBookItemName": "Returns the name of a [[spellbook]] item.",
	"GetSpellBookItemTexture": "Returns the icon texture of a spellbook item.",
	"GetSpellCharges": "Returns information about the charges of a charge-accumulating player ability.",
	"GetSpellCooldown": "Returns the cooldown info of a spell.",
	"GetSpellCritChance": "Returns the critical hit chance for the specified spell school.",
	"GetSpellDescription": "Returns the spell description.",
	"GetSpellInfo": "Returns spell info.",
	"GetSpellLink": "Returns the hyperlink for a spell.",
	"GetSpellPowerCost": "Returns resource cost info for a spell.",
	"GetSpellTabInfo": "Returns info for the specified spellbook tab.",
	"GetSpellTexture": "Returns the icon texture of a spell.",
	"GetStablePetFoodTypes": "Returns the food types the specified stabled pet can eat.",
	"GetStablePetInfo": "Returns info for a specific stabled pet.",
	"GetStatistic": "Returns a character statistic.",
	"GetStatisticsCategoryList": "Returns the list of statistic categories.",
	"GetSubZoneText": "Returns the subzone name.",
	"GetSummonFriendCooldown": "Returns the cooldown info of the RaF Summon Friend ability.",
	"GetTalentInfo": "Returns info for the specified talent.",
	"GetTargetTradeMoney": "Returns the amount of money in the trade window for the other player.",
	"GetText": "Returns localized text depending on the specified gender.",
	"GetThreatStatusColor": "Returns the color for a threat status.",
	"GetTickTime": "Returns the time in seconds since the end of the previous frame and the start of the current frame.",
	"GetTime": "Returns the system uptime of your computer in seconds, with millisecond precision.",
	"GetTimePreciseSec": "Returns a monotonic timestamp in seconds, with millisecond precision.",
	"GetTitleName": "Returns the name of a player title.",
	"GetTitleText": "Returns the name of the quest at the quest giver.",
	"GetTotalAchievementPoints": "Returns the total number of achievement points earned.",
	"GetTotemInfo": "Returns info for the specified totem.",
	"GetTradePlayerItemInfo": "Returns information about a trade item.",
	"GetTradePlayerItemLink": "Returns the item link for an item in the trade window.",
	"GetTradeTargetItemInfo": "Returns item info for the other player in the trade window.",
	"GetTradeTargetItemLink": "Returns the item link for an item from the other player in the trade window.",
	"GetTrainerGreetingText": "Returns the trainer's greeting text.",
	"GetTrainerSelectionIndex": "Returns the index of the selected trainer service.",
	"GetTrainerServiceAbilityReq": "Returns the name of a requirement for training a skill and if the player meets the requirement.",
	"GetTrainerServiceCost": "Returns the cost of the specified trainer service.",
	"GetTrainerServiceDescription": "Returns the description of a specific trainer service.",
	"GetTrainerServiceIcon": "Returns the icon texture for a specific trainer service.",
	"GetTrainerServiceInfo": "Returns information about a trainer service.",
	"GetTrainerServiceItemLink": "Returns an item link for a trainer service.",
	"GetTrainerServiceLevelReq": "Returns the required level to learn a skill from the trainer.",
	"GetTrainerServiceSkillReq": "Returns the name of the required skill and the amount needed in that skill.",
	"GetTrainerServiceTypeFilter": "Returns the status of a skill filter in the trainer window.",
	"GetUnitSpeed": "Returns the movement speed of the unit.",
	"GetVoidItemHyperlinkString": "Returns the item link of an item in void storage.",
	"GetVoidItemInfo": "Returns info for a Void Storage slot.",
	"GetVoidTransferCost": "Returns the total Void Transfer cost.",
	"GetVoidTransferDepositInfo": "Returns info for the item being deposited into the Void Storage.",
	"GetVoidTransferWithdrawalInfo": "Returns info for the item being withdrawn from the Void Storage.",
	"GetWatchedFactionInfo": "Returns info for the currently watched faction.",
	"GetWeaponEnchantInfo": "Returns info for temporary weapon enchantments (e.g. sharpening stones).",
	"GetWorldPVPAreaInfo": "Returns info for a world PvP zone (e.g. Wintergrasp or Tol Barad).",
	"GetXPExhaustion": "Returns the amount of current rested XP for the character.",
	"GetZonePVPInfo": "Returns PVP info for the current zone.",
	"GetZoneText": "Returns the name of the zone the player is in.",
	"GuildControlDelRank": "Deletes a guild rank.",
	"GuildControlGetRankName": "Returns a guild rank name by index.",
	"GuildControlSaveRank": "Saves the current rank name.",
	"GuildControlSetRank": "Selects a guild rank.",
	"GuildControlSetRankFlag": "Sets guild rank permissions.",
	"GuildDemote": "Demotes the specified player in the guild.",
	"GuildDisband": "Disbands the guild; no warning is given.",
	"GuildInfo": "Prints info for the guild the player belongs to.",
	"GuildInvite": "Invites a player to the guild.",
	"GuildLeave": "Removes you from your current guild.",
	"GuildPromote": "Promotes the specified player in the guild.",
	"GuildRosterSetOfficerNote": "Sets the officer note of a guild member.",
	"GuildRosterSetPublicNote": "Sets the public note of a guild member.",
	"GuildSetLeader": "Transfers guild leadership to another player.",
	"GuildSetMOTD": "Sets the guild message of the day.",
	"GuildUninvite": "Removes a player from the guild.",
	"HasAction": "Returns true if an action slot is occupied.",
	"HasLFGRestrictions": "Returns whether the player is in a random party formed by the dungeon finder system.",
	"HasPetSpells": "Returns the number of available abilities for the player's combat pet.",
	"HasPetUI": "Returns true if the player currently has an active (hunter) pet out.",
	"HasWandEquipped": "Returns true if a wand is equipped.",
	"HideRepairCursor": "Takes the cursor out of repair mode.",
	"InCombatLockdown": "Returns true if the combat lockdown restrictions are active.",
	"InRepairMode": "Returns true if the cursor is in repair mode.",
	"InboxItemCanDelete": "Returns true if a message can be deleted, false if it can be returned to sender.",
	"InitiateTrade": "Opens a trade with the specified unit.",
	"IsAccountSecured": "Returns if the account has been secured with [[Blizzard Mobile Authenticator]].",
	"IsActionInRange": "Returns true if the specified action is in range.",
	"IsActiveBattlefieldArena": "Returns true if the player is inside a (rated) arena.",
	"IsAddOnLoadOnDemand": "Returns true if the specified addon is load-on-demand.",
	"IsAddOnLoaded": "Returns true if the specified addon is loaded.",
	"IsAttackAction": "Returns true if an action is the \"Auto Attack\" action.",
	"IsAttackSpell": "Returns true if a spellbook item is the \"Auto Attack\" spell.",
	"IsAutoRepeatAction": "Returns true if an action is currently auto-repeating (e.g. Shoot for wand and Auto Shot for Hunters).",
	"IsConsumableAction": "Returns true if an action is a consumable, i.e. it has a count.",
	"IsCurrentAction": "Returns true if the specified action is currently being used.",
	"IsCurrentSpell": "Returns true if the specified spell ID is currently being casted or queued.",
	"IsEquippableItem": "Returns true if an item is equipable by the player.",
	"IsEquippedAction": "Returns true if the specified action slot is an equipped item.",
	"IsEquippedItemType": "Returns true if an item of a given type is equipped.",
	"IsFactionInactive": "Returns true if the specified faction is marked inactive.",
	"IsFalling": "Returns true if the character is currently falling.",
	"IsFlyableArea": "Returns true if the current zone is a flyable area.",
	"IsFlying": "Returns true if the character is currently on a flying mount.",
	"IsGuildLeader": "Returns true if the player is the guild master.",
	"IsInGroup": "Returns true if the player is in a group.",
	"IsInGuild": "Lets you know whether you are in a guild.",
	"IsInInstance": "Returns true if the player is in an instance, and the type of instance.",
	"IsInRaid": "Returns true if the player is in a raid.",
	"IsIndoors": "Returns true if the character is currently indoors.",
	"IsInventoryItemLocked": "Returns whether an inventory item is locked, usually as it awaits pending action.",
	"IsItemInRange": "Returns whether the item is in usable range of the unit.",
	"IsLFGComplete": "Returns whether you have currently finished a Dungeon Finder instance.",
	"IsLinuxClient": "Returns true if on a Linux client.",
	"IsMacClient": "Returns true if on a Mac client.",
	"IsModifiedClick": "Returns true if the modifier key needed for an an action is pressed.",
	"IsModifierKeyDown": "Returns true if a modifier key is currently pressed down.",
	"IsMounted": "Returns true if the character is currently mounted.",
	"IsMouselooking": "Returns true if the player is currently in mouselook mode.",
	"IsMoviePlayable": "Returns true if the specified movie exists and can be played.",
	"IsOutOfBounds": "Returns true if the player is currently outside of map boundaries.",
	"IsOutdoors": "Returns true if the character is currently outdoors.",
	"IsPassiveSpell": "Returns true if the specified spell is a passive ability.",
	"IsPetAttackActive": "Returns true if the pet is currently auto attacking.",
	"IsQuestCompletable": "Returns true if the displayed quest at a quest giver can be completed.",
	"IsRecognizedName": "Returns true if a given character name is recognized by the client.",
	"IsResting": "Returns true if the character is currently resting.",
	"IsSpellClassOrSpec": "Returns whether a given spell is specific to a specialization and/or class.",
	"IsSpellInRange": "Returns true if the player is in range to use the specified spell on the target unit.",
	"IsSpellKnown": "Returns whether the player (or pet) knows the given spell.",
	"IsSpellOverlayed": "Returns true if the specified spell currently has a proc / spell activation alert (glowing border).",
	"IsStealthed": "Returns true if the character is currently stealthed.",
	"IsSwimming": "Returns true if the character is currently swimming.",
	"IsTalentSpell": "Returns true if the specified spell is learned from a talent.",
	"IsThreatWarningEnabled": "Returns true if threat warnings are currently enabled.",
	"IsTitleKnown": "Returns true if the character can use a player title.",
	"IsTradeskillTrainer": "Returns true if the training window is used for a profession trainer.",
	"IsTrialAccount": "Returns whether the player is using a trial (free-to-play) account.",
	"IsUsableAction": "Returns true if the character can currently use the specified action (sufficient mana, reagents and not on cooldown).",
	"IsUsableSpell": "Determines whether a spell can be used by the player character.",
	"IsWindowsClient": "Returns true if on a Windows client.",
	"ItemTextGetCreator": "Returns the name of the character who created the item text.",
	"ItemTextGetItem": "Returns the item name that the item text belongs to.",
	"ItemTextGetMaterial": "Returns the material texture for the item text.",
	"ItemTextGetPage": "Returns the page number of the currently displayed page.",
	"ItemTextGetText": "Returns the contents of the currently displayed page.",
	"ItemTextHasNextPage": "Returns true if there is a page after the current page.",
	"ItemTextNextPage": "Moves to the next page of the item text.",
	"ItemTextPrevPage": "Moves to the previous page of the item text.",
	"JoinBattlefield": "Joins the battleground queue solo or as a group.",
	"JoinChannelByName": "Joins the specified chat channel.",
	"JoinPermanentChannel": "Joins the specified chat channel; the channel will be rejoined after relogging.",
	"JoinSkirmish": "Queue for a arena either solo or as a group.",
	"JoinTemporaryChannel": "Joins the specified chat channel; the channel will be left on logout.",
	"JumpOrAscendStart": "Makes the character jump or swim/fly upwards.",
	"LFGTeleport": "Teleports the player to or from a LFG dungeon.",
	"LeaveBattlefield": "Leaves the current battleground.",
	"LeaveChannelByName": "Leaves the channel with the specified name.",
	"ListChannelByName": "Prints the list of members in the specified channel.",
	"ListChannels": "Prints the list of currently joined chat channel.",
	"LoadAddOn": "Loads the specified LoadOnDemand addon.",
	"LoadBindings": "Loads default, account or character specific key bindings.",
	"LoggingChat": "Gets or sets whether logging chat to Logs\WoWChatLog.txt is enabled.",
	"LoggingCombat": "Gets or sets whether logging combat to Logs\WoWCombatLog.txt is enabled.",
	"Logout": "Logs the player out of the game.",
	"LootSlot": "Loots the specified slot; can require confirmation with [[API ConfirmLootSlot|ConfirmLootSlot]].",
	"MouselookStart": "Enters mouse look mode; alters the character's movement/facing direction.",
	"MouselookStop": "Exits mouse look mode.",
	"MoveBackwardStart": "The player begins moving backward at the specified time.",
	"MoveBackwardStop": "The player stops moving backward at the specified time.",
	"MoveForwardStart": "The player begins moving forward at the specified time.",
	"MoveForwardStop": "The player stops moving forward at the specified time.",
	"MoveViewDownStart": "Starts rotating the camera downward.",
	"MoveViewDownStop": "Stops rotating the camera downward.",
	"MoveViewInStart": "Begins zooming the camera in.",
	"MoveViewInStop": "Stops zooming the camera in.",
	"MoveViewLeftStart": "Starts rotating the camera to the left.",
	"MoveViewLeftStop": "Stops rotating the camera to the left.",
	"MoveViewOutStart": "Begins zooming the camera out.",
	"MoveViewOutStop": "Stops zooming the camera out.",
	"MoveViewRightStart": "Starts rotating the camera to the right.",
	"MoveViewRightStop": "Stops rotating the camera to the right.",
	"MoveViewUpStart": "Starts rotating the camera upward.",
	"MoveViewUpStop": "Stops rotating the camera upward.",
	"MuteSoundFile": "Mutes a sound file.",
	"NeutralPlayerSelectFaction": "Allows a Pandaren to choose a faction.",
	"NoPlayTime": "Returns true if the account is considered \"unhealthy\" for players on Chinese realms.",
	"NotWhileDeadError": "Generates an error message saying you cannot do that while dead.",
	"NotifyInspect": "Requests another player's inventory and talent info before inspecting.",
	"NumTaxiNodes": "Returns the number of flight paths on the taxi map.",
	"OfferPetition": "Offers a petition to your target.",
	"PartialPlayTime": "Returns true if the account is considered \"tired\" for players on Chinese realms.",
	"PetAbandon": "Permanently abandons your pet.",
	"PetAssistMode": "Set your pet to Assist mode.",
	"PetAttack": "Instruct your pet to attack your target.",
	"PetCanBeAbandoned": "Returns true if the pet can be abandoned.",
	"PetCanBeRenamed": "Returns true if the pet can be renamed.",
	"PetDefensiveMode": "Set your pet in defensive mode.",
	"PetDismiss": "Dismiss your pet.",
	"PetFollow": "Instruct your pet to follow you.",
	"PetHasActionBar": "Determine if player has a pet with an action bar.",
	"PetPassiveMode": "Set your pet into passive mode.",
	"PetRename": "Renames your pet.",
	"PetStopAttack": "Stops the pet from attacking.",
	"PetWait": "Instruct your pet to remain still.",
	"PickupAction": "Places an action onto the cursor.",
	"PickupBagFromSlot": "Picks up the bag from the specified slot, placing it in the cursor.",
	"PickupCompanion": "Places a mount onto the cursor.",
	"PickupInventoryItem": "Picks up / interacts with an equipment slot.",
	"PickupMacro": "Places a macro onto the cursor.",
	"PickupMerchantItem": "Places a merchant item onto the cursor. If the cursor already has an item, it will be sold.",
	"PickupPetAction": "Places a pet action onto the cursor.",
	"PickupPlayerMoney": "Picks up an amount of money from the player onto the cursor.",
	"PickupSpell": "Places a spell onto the cursor.",
	"PickupTradeMoney": "Places an amount of money from the player's trade offer onto the cursor.",
	"PlaceAction": "Places an action onto into the specified action slot.",
	"PlayMusic": "Plays the specified sound file on loop to the \"Music\" sound channel.",
	"PlaySound": "Plays the specified sound by SoundKitID.",
	"PlaySoundFile": "Plays the specified sound by [[FileDataID]] or addon file path.",
	"PromoteToLeader": "Promotes a unit to group leader.",
	"PutItemInBackpack": "Places the item on the cursor into the player's backpack.",
	"PutItemInBag": "Places the item on the cursor into the specified bag slot.",
	"QuestChooseRewardError": "Throws an error when the quest reward method doesn't work.",
	"QuestGetAutoAccept": "Returns whether the last-offered quest was automatically accepted.",
	"QuestIsDaily": "Returns true if the offered quest is a daily quest.",
	"QuestIsWeekly": "Returns true if the offered quest is a weekly quest.",
	"QuestLogPushQuest": "Shares the current quest in the quest log with other players.",
	"Quit": "Quits the game.",
	"RandomRoll": "Performs a random roll between two values.",
	"RejectProposal": "Declines a LFG invite and leaves the queue.",
	"RemoveChatWindowChannel": "Removes the specified chat channel from a chat window.",
	"RemoveChatWindowMessages": "Removes the specified chat message type from a chat window.",
	"RemoveItemFromArtifact": "Removes a [[Keystone]] from the selected artifact.",
	"RenamePetition": "Renames the current petition.",
	"RepairAllItems": "Repairs all equipped and inventory items.",
	"ReplaceEnchant": "Confirms the \"Replace Enchant\" dialog.",
	"ReplaceGuildMaster": "Impeaches the current Guild Master.",
	"ReplaceTradeEnchant": "Confirms that an enchant applied to the trade frame should replace an existing enchant.",
	"RepopMe": "Releases your ghost to the graveyard when dead.",
	"RequestBattlefieldScoreData": "Requests the latest battlefield score data from the server.",
	"RequestBattlegroundInstanceInfo": "Requests the available instances of a battleground.",
	"RequestRaidInfo": "Requests which instances the player is saved to.",
	"RequestTimePlayed": "Requests a summary of time played.",
	"ResetInstances": "Resets all instances for the character.",
	"RestartGx": "Restarts the graphics engine.",
	"RetrieveCorpse": "Resurrects when the player is standing near its corpse.",
	"RollOnLoot": "Rolls or passes on loot.",
	"RunBinding": "Executes a key binding.",
	"RunMacro": "Executes a macro.",
	"RunMacroText": "Executes a string as if it was a macro.",
	"RunScript": "Executes a string of Lua code.",
	"SaveBindings": "Saves account or character specific key bindings.",
	"SaveView": "Saves a camera angle. The last position loaded is stored in the [[CVar cameraView]].",
	"Screenshot": "Takes a screenshot.",
	"SecureCmdOptionParse": "Evaluates macro conditionals without the need of a macro.",
	"SelectedRealmName": "Returns the realm name that will be used in Recruit-a-Friend invitations.",
	"SendChatMessage": "Sends a chat message.",
	"SendMail": "Sends in-game mail.",
	"SendSystemMessage": "Prints a yellow CHAT_MSG_SYSTEM message.",
	"SetAchievementComparisonUnit": "Sets the unit to be compared to.",
	"SetAchievementSearchString": "Starts a search for achievements containing the specified text.",
	"SetActionBarToggles": "Sets the visible state for each action bar.",
	"SetAutoDeclineGuildInvites": "Sets whether guild invites should be automatically declined.",
	"SetBattlefieldScoreFaction": "Sets the faction to show on the battlefield scoreboard.",
	"SetBinding": "Sets a key binding to an action.",
	"SetBindingClick": "Sets a binding to click the specified Button widget.",
	"SetBindingSpell": "Sets a binding to cast the specified spell.",
	"SetChannelOwner": "Sets the channel owner.",
	"SetChannelPassword": "Changes the password of the current channel.",
	"SetConsoleKey": "Sets the console key (normally ~).",
	"SetCurrentTitle": "Sets the player's displayed title.",
	"SetCursor": "Sets the current cursor texture.",
	"SetDungeonDifficultyID": "Sets the player's dungeon difficulty.",
	"SetFactionActive": "Flags the specified faction as active in the reputation window.",
	"SetFactionInactive": "Flags the specified faction as inactive in the reputation window.",
	"SetGuildBankTabInfo": "Sets the name and icon of a guild bank tab.",
	"SetGuildBankTabPermissions": "Modifies the permissions for a guild bank tab.",
	"SetGuildBankText": "Modifies info text for a tab.",
	"SetGuildBankWithdrawGoldLimit": "Sets the gold withdraw limit for the guild bank.",
	"SetGuildInfoText": "Sets the guild info text.",
	"SetGuildRosterSelection": "Selects a guild member in the roster.",
	"SetGuildRosterShowOffline": "Sets the show offline guild members flag.",
	"SetLFGComment": "Sets the comment in the LFG browser.",
	"SetLootMethod": "Set the current loot method.",
	"SetLootThreshold": "Sets the loot quality threshold for group/master loot.",
	"SetMultiCastSpell": "Sets the totem spell for a specific totem bar slot.",
	"SetOptOutOfLoot": "Sets whether to automatically pass on all loot.",
	"SetOverrideBinding": "Sets an override key binding.",
	"SetOverrideBindingClick": "Sets an override binding that performs a button click.",
	"SetPVP": "Sets the player's PvP flag.",
	"SetPortraitTexture": "Sets a texture to a unit's 2D portrait.",
	"SetPortraitToTexture": "Applies a circular mask to a texture, making it resemble a portrait.",
	"SetRaidDifficultyID": "Sets the raid difficulty.",
	"SetRaidSubgroup": "Move a raid member from his current subgroup into a different (non-full) subgroup.",
	"SetRaidTarget": "Assigns a [[Target marker|raid target]] icon to a unit.",
	"SetSelectedArtifact": "Sets the selected artifact to an archaeology race.",
	"SetSpecialization": "Selects a specialization.",
	"SetTradeMoney": "Sets the amount of money offered as part of the player's trade offer.",
	"SetTrainerServiceTypeFilter": "Sets the status of a skill filter in the trainer window.",
	"SetView": "Sets the camera to a predefined camera position (1-5).",
	"SetWatchedFactionIndex": "Watches a faction in the reputation window.",
	"SetupFullscreenScale": "Sizes a frame to take up the entire screen regardless of screen resolution.",
	"SignPetition": "Signs the currently viewed petition.",
	"SitStandOrDescendStart": "Makes the player sit, stand, or descend (while swimming or flying).",
	"SocketItemToArtifact": "Adds a [[keystone]] to the selected archaeology artifact.",
	"SortGuildRoster": "Sorts the guild roster on a certain column.",
	"SpellCanTargetUnit": "Returns true if the spell awaiting target selection can be cast on the unit.",
	"SpellIsTargeting": "Returns true if a spell is about to be cast and is waiting for the player to select a target.",
	"SpellStopCasting": "Stops the current spellcast.",
	"SpellStopTargeting": "Cancels the spell awaiting target selection.",
	"SpellTargetUnit": "Casts the spell awaiting target selection on the unit.",
	"StartDuel": "Challenges the specified player to a duel.",
	"StopMusic": "Stops the currently playing music.",
	"StrafeLeftStart": "The player begins strafing left at the specified time.",
	"StrafeLeftStop": "The player stops strafing left at the specified time.",
	"StrafeRightStart": "The player begins strafing right at the specified time.",
	"StrafeRightStop": "The player stops strafing right at the specified time.",
	"Stuck": "Notifies the game engine that the player is stuck.",
	"SummonFriend": "Summons a player using the RaF system.",
	"SummonRandomCritter": "No longer does anything.",
	"SwapRaidSubgroup": "Swaps two raid members into different groups.",
	"TakeInboxItem": "Takes the attached item from the mailbox message.",
	"TakeInboxMoney": "Take the attached money from the mailbox message at index.",
	"TakeTaxiNode": "Travels to the specified flight path node.",
	"TargetLastEnemy": "Targets the previously targeted enemy.",
	"TargetLastTarget": "Selects the last target as the current target.",
	"TargetNearestEnemy": "Selects the nearest enemy as the current target.",
	"TargetNearestFriend": "Targets the nearest friendly unit.",
	"TargetUnit": "Targets the specified unit.",
	"TaxiNodeCost": "Returns the cost of the flight path in copper.",
	"TaxiNodeGetType": "Returns the type of a flight path node.",
	"TaxiNodeName": "Returns the name of a flight path node.",
	"TaxiNodePosition": "Returns the position of a flight point on the taxi map.",
	"ToggleAutoRun": "Turns auto-run on or off.",
	"TogglePVP": "Toggles the player's PvP flag on or off.",
	"ToggleRun": "Toggle between running and walking.",
	"ToggleSheath": "Toggles sheathed or unsheathed weapons.",
	"TurnLeftStart": "Turns the player left at the specified time.",
	"TurnLeftStop": "The player stops turning left at the specified time.",
	"TurnOrActionStart": "Starts a \"right click\" in the 3D game world.",
	"TurnOrActionStop": "Stops a \"right click\" in the 3D game world.",
	"TurnRightStart": "Turns the player right at the specified time.",
	"TurnRightStop": "The player stops turning right at the specified time.",
	"UninviteUnit": "Removes a player from the group if you're the leader, or initiates a vote to kick.",
	"UnitAffectingCombat": "Returns true if the unit is in combat.",
	"UnitArmor": "Returns the armor stats for the unit.",
	"UnitAttackPower": "Returns the unit's melee attack power and modifiers.",
	"UnitAttackSpeed": "Returns the unit's melee attack speed for each hand.",
	"UnitAura": "Returns the buffs/debuffs for the unit.",
	"UnitCanAssist": "Indicates whether the first unit can assist the second unit.",
	"UnitCanAttack": "Returns true if the first unit can attack the second.",
	"UnitCanCooperate": "Returns true if the first unit can cooperate with the second.",
	"UnitCastingInfo": "Returns information about the spell currently being cast by the specified unit.",
	"UnitChannelInfo": "Returns information about the spell currently being channeled by the specified unit.",
	"UnitClass": "Returns the class of the unit.",
	"UnitClassification": "Returns the classification of the specified unit (e.g., \"elite\" or \"worldboss\").",
	"UnitCreatureFamily": "Returns the creature type of the unit (e.g. Crab).",
	"UnitCreatureType": "Returns the creature classification type of the unit (e.g. Beast).",
	"UnitDamage": "Returns the damage stats for the unit.",
	"UnitDetailedThreatSituation": "Returns detailed info for the threat status of one unit against another.",
	"UnitDistanceSquared": "Returns the squared distance to a unit in your group.",
	"UnitEffectiveLevel": "Returns the unit's effective (scaled) level.",
	"UnitExists": "Returns true if the unit exists.",
	"UnitFactionGroup": "Returns the faction (Horde/Alliance) a unit belongs to.",
	"UnitGUID": "Returns the GUID of the unit.",
	"UnitGetIncomingHeals": "Returns the predicted heals cast on the specified unit.",
	"UnitGetTotalAbsorbs": "Returns the total amount of damage the unit can absorb before losing health.",
	"UnitGetTotalHealAbsorbs": "Returns the total amount of healing the unit can absorb without gaining health.",
	"UnitGroupRolesAssigned": "Returns the assigned role in a group formed via the Dungeon Finder Tool.",
	"UnitHasIncomingResurrection": "Returns true if the unit is currently being resurrected.",
	"UnitHasLFGDeserter": "Returns whether the unit is currently unable to use the dungeon finder due to leaving a group prematurely.",
	"UnitHasLFGRandomCooldown": "Returns whether the unit is currently under the effects of the random dungeon cooldown.",
	"UnitHealth": "Returns the current health of the unit.",
	"UnitHealthMax": "Returns the maximum health of the unit.",
	"UnitHonor": "Returns the current amount of honor the unit has for the current rank.",
	"UnitHonorLevel": "Returns the current honor rank of the unit.",
	"UnitHonorMax": "Returns the maximum amount of honor for the current rank.",
	"UnitInBattleground": "Returns the unit index if the unit is in your battleground.",
	"UnitInParty": "Returns true if the unit is a member of your party.",
	"UnitInRaid": "Returns the index if the unit is in your raid group.",
	"UnitInRange": "Returns true if the unit is within 40 yards range (25 yards for Evokers).",
	"UnitIsAFK": "Returns true if a friendly unit is AFK (Away from keyboard).",
	"UnitIsCharmed": "Returns true if the unit is charmed.",
	"UnitIsConnected": "Returns true if the unit is connected to the game (i.e. not offline).",
	"UnitIsDND": "Returns true if a unit is DND (Do not disturb).",
	"UnitIsDead": "Returns true if the unit is dead.",
	"UnitIsDeadOrGhost": "Returns true if the unit is dead or in ghost form.",
	"UnitIsEnemy": "Returns true if the specified units are hostile to each other.",
	"UnitIsFeignDeath": "Returns true if the unit (must be a group member) is feigning death.",
	"UnitIsFriend": "Returns true if the specified units are friendly to each other.",
	"UnitIsGhost": "Returns true if the unit is in ghost form.",
	"UnitIsGroupLeader": "Returns whether the unit is the leader of a party or raid.",
	"UnitIsPVP": "Returns true if the unit is flagged for PVP.",
	"UnitIsPVPFreeForAll": "Returns true if the unit is flagged for free-for-all PVP (e.g. in a world arena).",
	"UnitIsPlayer": "Returns true if the unit is a player character.",
	"UnitIsPossessed": "Returns true if the unit is currently under control of another (e.g. Mind Control).",
	"UnitIsSameServer": "Returns true if the unit is from the same (connected) realm.",
	"UnitIsTrivial": "Ttrue if the unit is trivial (i.e. \"grey\" to the player).",
	"UnitIsUnit": "Returns true if the specified units are the same unit.",
	"UnitIsVisible": "Returns true if the game client can see the unit.",
	"UnitLevel": "Returns the level of the unit.",
	"UnitName": "Returns the name and realm of the unit.",
	"UnitOnTaxi": "Returns true if the unit is on a flight path.",
	"UnitPVPName": "Returns the unit's name with title (e.g. \"Bob the Explorer\").",
	"UnitPhaseReason": "Returns the reason if a unit is NOT in the same phase.",
	"UnitPlayerControlled": "Returns true if the unit is controlled by a player.",
	"UnitPlayerOrPetInParty": "Returns true if a different unit or pet is a member of the party.",
	"UnitPlayerOrPetInRaid": "Returns true if a different unit or pet is a member of the raid.",
	"UnitPosition": "Returns the position of a unit in the current world area.",
	"UnitPower": "Returns the current power resource of the unit.",
	"UnitPowerMax": "Returns the maximum power resource of the unit.",
	"UnitPowerType": "Returns a number corresponding to the power type (e.g., mana, rage or energy) of the specified unit.",
	"UnitPvpClassification": "Returns whether the unit is a flag/orb carrier or cart runner.",
	"UnitQuestTrivialLevelRange": "Returns the difference between the units' current level and the level at which fixed-level quests are of trivial difficulty.",
	"UnitRace": "Returns the race of the unit.",
	"UnitRangedAttackPower": "Returns the ranged attack power of the unit.",
	"UnitRangedDamage": "Returns the ranged attack speed and damage of the unit.",
	"UnitReaction": "Returns the reaction of the specified unit to another unit.",
	"UnitSelectionColor": "Returns the color of the outline and circle underneath the unit.",
	"UnitSelectionType": "Returns the selection type of the outline and circle underneath the unit.",
	"UnitSex": "Returns the gender of the unit.",
	"UnitSpellHaste": "Returns the current spell haste percentage for a unit.",
	"UnitStat": "Returns the basic attributes for a unit (strength, agility, stamina, intellect).",
	"UnitThreatSituation": "Returns the threat status of the specified unit to another unit.",
	"UnitTreatAsPlayerForDisplay": "Whether a unit should be treated as if it was an actual player.",
	"UnitUsingVehicle": "Returns true if the unit is currently in a vehicle.",
	"UnitXP": "Returns the current XP of the unit; only works on the player.",
	"UnitXPMax": "Returns the maximum XP of the unit; only works on the player.",
	"UnlockVoidStorage": "Purchases the Void Storage.",
	"UnmuteSoundFile": "Unmutes a sound file.",
	"UpdateWindow": "When in windowed mode, updates the window. This also aligns it to the top of the screen and increases the size to max widowed size.",
	"UseAction": "Perform the action in the specified action slot.",
	"UseInventoryItem": "Use an item in a specific inventory slot.",
	"UseItemByName": "Uses the specified item.",
	"debugprofilestart": "Starts a timer for profiling during debugging.",
	"debugprofilestop": "Returns the time in milliseconds since the last call to debugprofilestart().",
	"debugstack": "Returns a string representation of the current calling stack.",
	"forceinsecure": "Taints the current execution path.",
	"geterrorhandler": "Returns the currently set error handler.",
	"hooksecurefunc": "Securely posthooks the specified function. The hook will be called with the same arguments after the original call is performed.",
	"issecure": "Returns true if the current execution path is secure.",
	"issecurevariable": "Returns true if the specified variable is secure.",
	"securecall": "Calls the specified function without propagating taint to the caller.",
	"seterrorhandler": "Sets the error handler to the given function.",
}
